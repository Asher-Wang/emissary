version: 2.1

# Secure environment variables set from the Web UI:
#
# - AWS_ACCESS_KEY_ID (AWS S3)
# - AWS_SECRET_ACCESS_KEY (AWS S3)
#
# - DEV_REGISTRY (DockerHub)
# - DOCKER_BUILD_USERNAME (DockerHub)
# - DOCKER_BUILD_PASSWORD (DockerHub)
#
# - RELEASE_REGISTRY (DockerHub)
# - DOCKER_RELEASE_USERNAME (DockerHub)
# - DOCKER_RELEASE_PASSWORD (DockerHub)
#
# - KUBECEPTION_TOKEN

commands:

  "oss-images-build-and-test":
    steps:
      - run:
          name: "Ensure CI configuration is up-to-date"
          command: |
            set -x
            test_targets=$(make -n noop --print-data-base 2>/dev/null | sed -n 's/^test: *//p' | xargs printf '%s\n' | LC_COLLATE=C sort -u | xargs echo)
            if [ "$test_targets" != "gotest ingresstest pytest" ]; then
              echo "Makefile 'test' target has changed to $test_targets, you need to update '.circleci/config.yml.d/oss.yml'" >&2
              exit 1
            fi

            (cd .circleci && ./generate --always-make)
            if test -n "$(git status --porcelain)"; then
              echo "The file '.circleci/config.yml' is out of date." >&2
              echo "Run '(cd .circleci && ./generate)' to update it." >&2
              exit 1
            fi
      - run:
          name: "Set up cluster and registry"
          command: |
            ./.ci/kubernaut-claim
            echo >>"$BASH_ENV" 'if test -e ~/kubernaut-claim.txt; then'
            echo >>"$BASH_ENV" '  export DEV_KUBECONFIG=~/.kube/$(cat ~/kubernaut-claim.txt).yaml'
            echo >>"$BASH_ENV" 'fi'

            if [[ -n "$DEV_REGISTRY" && -n "$DOCKER_BUILD_USERNAME" && -n "DOCKER_BUILD_PASSWORD" ]]; then
              docker login -u="${DOCKER_BUILD_USERNAME}" -p="${DOCKER_BUILD_PASSWORD}" "${DEV_REGISTRY%%/*}"
            else
              echo >>"$BASH_ENV" 'if test -e ~/kubernaut-claim.txt; then'
              echo >>"$BASH_ENV" '  KUBECONFIG=$DEV_KUBECONFIG go run ./cmd/k8sregistryctl up --storage=hostPath'
              echo >>"$BASH_ENV" '  export DEV_REGISTRY=127.0.0.1:31000'
              echo >>"$BASH_ENV" 'fi'
            fi
            echo >>"$BASH_ENV" unset BASH_ENV
      - run:
          name: "Build"
          command: |
            make push
      - run:
          name: "Go Tests"
          command: |
            make gotest
      # XXX The three KAT runs should really be split out into separate parallel jobs.
      # Circle makes that hard enough that we're not going to do it just yet, though.
      - run:
          name: "KAT (normal)"
          command: |
            export DEV_KUBE110=yes
            export DEV_KUBE_NO_PVC=yes
            export KAT_REQ_LIMIT=600
            make pytest-only
      - run:
          name: "Cycle cluster"
          command: |
            ./.ci/kubernaut-unclaim
            ./.ci/kubernaut-claim
      - run:
          name: "KAT (FAST_VALIDATION)"
          command: |
            export DEV_KUBE110=yes
            export DEV_KUBE_NO_PVC=yes
            export KAT_REQ_LIMIT=600
            export AMBASSADOR_FAST_VALIDATION=true
            make pytest-only
      - run:
          name: "Cycle cluster"
          command: |
            ./.ci/kubernaut-unclaim
            ./.ci/kubernaut-claim
      - run:
          name: "KAT (FAST_VALIDATION and FAST_RECONFIGURE)"
          command: |
            export DEV_KUBE110=yes
            export DEV_KUBE_NO_PVC=yes
            export KAT_REQ_LIMIT=600
            export AMBASSADOR_FAST_VALIDATION=true
            export AMBASSADOR_FAST_RECONFIGURE=true
            make pytest-only
      # We might want to run ingress-conformance tests in AES in the future
      # This would require we install `kind` on circleci and that the test suite
      # supports HTTP to HTTPS redirects (AES enables cleartext redirection by
      # default, even for fallback hosts, contrary to AOSS)
      # - run:
      #     name: "Ingress Conformance Tests"
      #     command: |
      #       export DEV_KUBE110=yes
      #       make ingresstest
      - run:
          command: "./.ci/kubernaut-unclaim"
          when: "always"
      - dirty-check
      #- oss-save-logs

  "aes-images-build-and-test":
    parameters:
      fast:
        default: "false"
        type: string
      go_tests:
        default: true
        type: boolean
      kat_tests:
        default: true
        type: boolean
      e2e_tests:
        default: true
        type: boolean
    steps:
      - run:
          name: "Ensure CI configuration is up-to-date"
          command: |
            set -x
            test_targets=$(make -n noop --print-data-base 2>/dev/null | sed -n 's/^test: *//p' | xargs printf '%s\n' | LC_COLLATE=C sort -u | xargs echo)
            if [ "$test_targets" != "e2etest gotest ingresstest pytest" ]; then
              echo "Makefile 'test' target has changed to $test_targets, you need to update '.circleci/config.yml.d/aes.yml'" >&2
              exit 1
            fi

            (cd .circleci && ./generate --always-make)
            if test -n "$(git status --porcelain)"; then
              echo "The file '.circleci/config.yml' is out of date." >&2
              echo "Run '(cd .circleci && ./generate)' to update it." >&2
              exit 1
            fi
      - run:
          name: "Build"
          command: |
            docker login -u="${DOCKER_BUILD_USERNAME}" -p="${DOCKER_BUILD_PASSWORD}" "${DEV_REGISTRY%%/*}"
            ./ambassador/.ci/kubernaut-claim
            export DEV_KUBECONFIG=~/.kube/$(cat ~/kubernaut-claim.txt).yaml
            make push
      - when:
          condition: <<parameters.go_tests>>
          steps:
          - run:
              name: "Go Tests"
              command: |
                export DEV_KUBECONFIG=~/.kube/$(cat ~/kubernaut-claim.txt).yaml
                make gotest
      - when:
          condition: <<parameters.kat_tests>>
          steps:
          - run:
              name: "KAT (fast=<<parameters.fast>>)"
              command: |
                export DEV_KUBECONFIG=~/.kube/$(cat ~/kubernaut-claim.txt).yaml
                export DEV_KUBE110=yes
                export DEV_KUBE_NO_PVC=yes
                export KAT_REQ_LIMIT=600
                export AMBASSADOR_FAST_RECONFIGURE=<<parameters.fast>>
                export AMBASSADOR_FAST_VALIDATION=<<parameters.fast>>
                make pytest-only
      # We might want to run ingress-conformance tests in AES in the future
      # This would require we install `kind` on circleci and that the test suite
      # supports HTTP to HTTPS redirects (AES enables cleartext redirection by
      # default, even for fallback hosts, contrary to AOSS)
      # - run:
      #     name: "Ingress Conformance Tests"
      #     command: |
      #       export DEV_KUBECONFIG=~/.kube/$(cat ~/kubernaut-claim.txt).yaml
      #       export DEV_KUBE110=yes
      #       make ingresstest
      - when:
          condition: <<parameters.e2e_tests>>
          steps:
          - run:
              name: "E2E Tests (fast=<<parameters.fast>>)"
              command: |
                export DEV_KUBECONFIG=~/.kube/$(cat ~/kubernaut-claim.txt).yaml
                export DEV_KUBE110=yes
                export DEV_KUBE_NO_PVC=yes
                export AMBASSADOR_FAST_RECONFIGURE=<<parameters.fast>>
                export AMBASSADOR_FAST_VALIDATION=<<parameters.fast>>
                make e2etest
      - run:
          command: "./ambassador/.ci/kubernaut-unclaim"
          when: "always"
      - dirty-check
      - aes-save-logs
