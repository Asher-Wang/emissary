{
    "Consul": {},
    "Kubernetes": {
        "AuthService": null,
        "ConsulResolver": null,
        "Host": null,
        "KubernetesEndpointResolver": null,
        "KubernetesServiceResolver": null,
        "LogService": null,
        "Mapping": null,
        "Module": null,
        "RateLimitService": null,
        "TCPMapping": null,
        "TLSContext": null,
        "TracingService": null,
        "ingresses": null,
        "service": [
            {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "getambassador.io/config": "---\napiVersion: ambassador/v1\nkind: Module\nname: ambassador\nconfig:\n  cors:\n    origins: http://foo.example.com\n    methods: POST, GET, OPTIONS\nambassador_id: globalcorstest\n---\napiVersion: ambassador/v1\nkind: Mapping\nname: globalcorstest-http-foo\nprefix: /foo/\nservice: globalcorstest-http\nambassador_id: globalcorstest\n---\napiVersion: ambassador/v1\nkind: Mapping\nname: globalcorstest-http-bar\nprefix: /bar/\nservice: globalcorstest-http\ncors:\n  origins: http://bar.example.com\n  methods: POST, GET, OPTIONS\nambassador_id: globalcorstest\n",
                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"getambassador.io/config\":\"---\\napiVersion: ambassador/v1\\nkind: Module\\nname: ambassador\\nconfig:\\n  cors:\\n    origins: http://foo.example.com\\n    methods: POST, GET, OPTIONS\\nambassador_id: globalcorstest\\n---\\napiVersion: ambassador/v1\\nkind: Mapping\\nname: globalcorstest-http-foo\\nprefix: /foo/\\nservice: globalcorstest-http\\nambassador_id: globalcorstest\\n---\\napiVersion: ambassador/v1\\nkind: Mapping\\nname: globalcorstest-http-bar\\nprefix: /bar/\\nservice: globalcorstest-http\\ncors:\\n  origins: http://bar.example.com\\n  methods: POST, GET, OPTIONS\\nambassador_id: globalcorstest\\n\"},\"labels\":{\"app.kubernetes.io/component\":\"ambassador-service\",\"kat-ambassador-id\":\"globalcorstest\",\"scope\":\"AmbassadorTest\"},\"name\":\"globalcorstest\",\"namespace\":\"default\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":8080},{\"name\":\"https\",\"port\":443,\"protocol\":\"TCP\",\"targetPort\":8443}],\"selector\":{\"service\":\"globalcorstest\"},\"type\":\"NodePort\"}}\n"
                    },
                    "creationTimestamp": "2020-07-06T15:19:48Z",
                    "labels": {
                        "app.kubernetes.io/component": "ambassador-service",
                        "kat-ambassador-id": "globalcorstest",
                        "scope": "AmbassadorTest"
                    },
                    "name": "globalcorstest",
                    "namespace": "default",
                    "resourceVersion": "19162",
                    "selfLink": "/api/v1/namespaces/default/services/globalcorstest",
                    "uid": "215a768b-bf9c-11ea-b9b6-0e01d46fe775"
                },
                "spec": {
                    "clusterIP": "10.99.69.206",
                    "externalTrafficPolicy": "Cluster",
                    "ports": [
                        {
                            "name": "http",
                            "nodePort": 32505,
                            "port": 80,
                            "protocol": "TCP",
                            "targetPort": 8080
                        },
                        {
                            "name": "https",
                            "nodePort": 30291,
                            "port": 443,
                            "protocol": "TCP",
                            "targetPort": 8443
                        }
                    ],
                    "selector": {
                        "service": "globalcorstest"
                    },
                    "sessionAffinity": "None",
                    "type": "NodePort"
                },
                "status": {
                    "loadBalancer": {}
                }
            },
            {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"kat-ambassador-id\":\"globalcorstest\",\"scope\":\"AmbassadorTest\",\"service\":\"globalcorstest-admin\"},\"name\":\"globalcorstest-admin\",\"namespace\":\"default\"},\"spec\":{\"ports\":[{\"name\":\"globalcorstest-admin\",\"port\":8877,\"targetPort\":8877}],\"selector\":{\"service\":\"globalcorstest\"},\"type\":\"NodePort\"}}\n"
                    },
                    "creationTimestamp": "2020-07-06T15:19:48Z",
                    "labels": {
                        "kat-ambassador-id": "globalcorstest",
                        "scope": "AmbassadorTest",
                        "service": "globalcorstest-admin"
                    },
                    "name": "globalcorstest-admin",
                    "namespace": "default",
                    "resourceVersion": "19166",
                    "selfLink": "/api/v1/namespaces/default/services/globalcorstest-admin",
                    "uid": "21674d60-bf9c-11ea-b9b6-0e01d46fe775"
                },
                "spec": {
                    "clusterIP": "10.110.247.82",
                    "externalTrafficPolicy": "Cluster",
                    "ports": [
                        {
                            "name": "globalcorstest-admin",
                            "nodePort": 32120,
                            "port": 8877,
                            "protocol": "TCP",
                            "targetPort": 8877
                        }
                    ],
                    "selector": {
                        "service": "globalcorstest"
                    },
                    "sessionAffinity": "None",
                    "type": "NodePort"
                },
                "status": {
                    "loadBalancer": {}
                }
            },
            {
                "apiVersion": "v1",
                "kind": "Service",
                "metadata": {
                    "annotations": {
                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"kat-ambassador-id\":\"globalcorstest\",\"scope\":\"AmbassadorTest\"},\"name\":\"globalcorstest-http\",\"namespace\":\"default\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":8084},{\"name\":\"https\",\"port\":443,\"protocol\":\"TCP\",\"targetPort\":8447}],\"selector\":{\"backend\":\"superpod-default\"}}}\n"
                    },
                    "creationTimestamp": "2020-07-06T15:19:48Z",
                    "labels": {
                        "kat-ambassador-id": "globalcorstest",
                        "scope": "AmbassadorTest"
                    },
                    "name": "globalcorstest-http",
                    "namespace": "default",
                    "resourceVersion": "19175",
                    "selfLink": "/api/v1/namespaces/default/services/globalcorstest-http",
                    "uid": "217c39a9-bf9c-11ea-b9b6-0e01d46fe775"
                },
                "spec": {
                    "clusterIP": "10.108.217.171",
                    "ports": [
                        {
                            "name": "http",
                            "port": 80,
                            "protocol": "TCP",
                            "targetPort": 8084
                        },
                        {
                            "name": "https",
                            "port": 443,
                            "protocol": "TCP",
                            "targetPort": 8447
                        }
                    ],
                    "selector": {
                        "backend": "superpod-default"
                    },
                    "sessionAffinity": "None",
                    "type": "ClusterIP"
                },
                "status": {
                    "loadBalancer": {}
                }
            }
        ]
    }
}