{
    "ambassador": {
        "_active": true,
        "_errored": false,
        "_finalized": true,
        "_rkey": "ir.ambassador",
        "admin_port": 8001,
        "debug_mode": false,
        "default_label_domain": "ambassador",
        "default_labels": {},
        "diagnostics": {
            "enabled": true,
            "prefix": "/ambassador/v0/",
            "rewrite": "/ambassador/v0/",
            "service": "127.0.0.1:8877"
        },
        "enable_http10": false,
        "enable_ipv4": true,
        "enable_ipv6": false,
        "envoy_log_path": "/dev/fd/1",
        "envoy_log_type": "text",
        "envoy_validation_timeout": 60,
        "kind": "IRAmbassador",
        "liveness_probe": {
            "enabled": true,
            "prefix": "/ambassador/v0/check_alive",
            "rewrite": "/ambassador/v0/check_alive",
            "service": "127.0.0.1:8877"
        },
        "location": "--internal--",
        "name": "ir.ambassador",
        "namespace": "default",
        "preserve_external_request_id": false,
        "proper_case": false,
        "readiness_probe": {
            "enabled": true,
            "prefix": "/ambassador/v0/check_ready",
            "rewrite": "/ambassador/v0/check_ready",
            "service": "127.0.0.1:8877"
        },
        "server_name": "envoy",
        "service_port": 8080,
        "use_ambassador_namespace_for_service_resolution": false,
        "use_proxy_proto": false,
        "use_remote_address": true,
        "x_forwarded_proto_redirect": false,
        "xff_num_trusted_hops": 0
    },
    "clusters": {
        "cluster_127_0_0_1_8877_default": {
            "_active": true,
            "_cache_key": "Cluster-cluster_127_0_0_1_8877_default",
            "_errored": false,
            "_hostname": "127.0.0.1",
            "_is_sidecar": false,
            "_namespace": "default",
            "_port": 8877,
            "_referenced_by": [
                "--internal--"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_127_0_0_1_8877_default",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "--internal--",
            "name": "cluster_127_0_0_1_8877_default",
            "namespace": "default",
            "service": "127.0.0.1:8877",
            "targets": [
                {
                    "ip": "127.0.0.1",
                    "port": 8877,
                    "target_kind": "IPaddr"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://127.0.0.1:8877"
            ]
        },
        "cluster_cbstatsd_sink_default": {
            "_active": true,
            "_cache_key": "Cluster-cluster_cbstatsd_sink_default",
            "_errored": false,
            "_hostname": "cbstatsd-sink",
            "_is_sidecar": false,
            "_namespace": "default",
            "_port": 80,
            "_referenced_by": [
                "circuitbreakingtest.default.2",
                "circuitbreakingtest.default.3"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_cbstatsd_sink_default",
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "circuitbreakingtest.default.2",
            "name": "cluster_cbstatsd_sink_default",
            "namespace": "default",
            "service": "cbstatsd-sink",
            "targets": [
                {
                    "ip": "cbstatsd-sink",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://cbstatsd-sink:80"
            ]
        },
        "cluster_circuitbreakingtest_http_default_cbdc1p1": {
            "_active": true,
            "_cache_key": "Cluster-cluster_circuitbreakingtest_http_default_cbdc1p1",
            "_errored": false,
            "_hostname": "circuitbreakingtest-http",
            "_is_sidecar": false,
            "_namespace": "default",
            "_port": 80,
            "_referenced_by": [
                "circuitbreakingtest.default.1"
            ],
            "_resolver": "kubernetes-service",
            "_rkey": "cluster_circuitbreakingtest_http_default_cbdc1p1",
            "circuit_breakers": [
                {
                    "_name": "cbdc1p1",
                    "max_connections": 1,
                    "max_pending_requests": 1,
                    "priority": "default"
                }
            ],
            "connect_timeout_ms": 3000,
            "enable_endpoints": false,
            "enable_ipv4": true,
            "enable_ipv6": false,
            "ignore_cluster": false,
            "kind": "IRCluster",
            "lb_type": "round_robin",
            "location": "circuitbreakingtest.default.1",
            "name": "cluster_circuitbreakingtest_http_default_cbdc1p1",
            "namespace": "default",
            "service": "circuitbreakingtest-http",
            "targets": [
                {
                    "ip": "circuitbreakingtest-http",
                    "port": 80,
                    "target_kind": "DNSname"
                }
            ],
            "type": "strict_dns",
            "urls": [
                "tcp://circuitbreakingtest-http:80"
            ]
        }
    },
    "filters": [
        {
            "_active": true,
            "_errored": false,
            "_rkey": "ir.cors",
            "config": {},
            "kind": "ir.cors",
            "location": "--internal--",
            "name": "cors",
            "namespace": "default"
        },
        {
            "_active": true,
            "_errored": false,
            "_rkey": "ir.router",
            "config": {},
            "kind": "ir.router",
            "location": "--internal--",
            "name": "router",
            "namespace": "default",
            "type": "decoder"
        }
    ],
    "groups": [
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "--internal--"
            ],
            "_rkey": "ir.ambassador",
            "default_class": "httpmapping",
            "group_id": "b4db12f5b638f1750062dd4220911c4f6f44fc57",
            "group_weight": [
                0,
                26,
                0,
                0,
                "/ambassador/v0/check_ready",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "--internal--",
            "mappings": [
                {
                    "_active": true,
                    "_cache_key": "IRHTTPMapping-v2-internal_readiness_probe_mapping-default",
                    "_errored": false,
                    "_referenced_by": [
                        "--internal--"
                    ],
                    "_rkey": "ir.ambassador",
                    "add_request_headers": {},
                    "add_response_headers": {},
                    "cluster": {
                        "_active": true,
                        "_cache_key": "Cluster-cluster_127_0_0_1_8877_default",
                        "_errored": false,
                        "_hostname": "127.0.0.1",
                        "_is_sidecar": false,
                        "_namespace": "default",
                        "_port": 8877,
                        "_referenced_by": [
                            "--internal--"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_127_0_0_1_8877_default",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "--internal--",
                        "name": "cluster_127_0_0_1_8877_default",
                        "namespace": "default",
                        "service": "127.0.0.1:8877",
                        "targets": [
                            {
                                "ip": "127.0.0.1",
                                "port": 8877,
                                "target_kind": "IPaddr"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://127.0.0.1:8877"
                        ]
                    },
                    "cluster_key": "Cluster-cluster_127_0_0_1_8877_default",
                    "default_class": "httpmapping",
                    "group_id": "b4db12f5b638f1750062dd4220911c4f6f44fc57",
                    "headers": [],
                    "kind": "IRHTTPMapping",
                    "location": "--internal--",
                    "name": "internal_readiness_probe_mapping",
                    "namespace": "default",
                    "precedence": 0,
                    "prefix": "/ambassador/v0/check_ready",
                    "query_parameters": [],
                    "regex_rewrite": {},
                    "resolver": "kubernetes-service",
                    "rewrite": "/ambassador/v0/check_ready",
                    "route_weight": [
                        0,
                        26,
                        0,
                        0,
                        "/ambassador/v0/check_ready",
                        "GET"
                    ],
                    "service": "127.0.0.1:8877",
                    "timeout_ms": 10000,
                    "weight": 100
                }
            ],
            "name": "GROUP: internal_readiness_probe_mapping",
            "namespace": "default",
            "precedence": 0,
            "prefix": "/ambassador/v0/check_ready",
            "query_parameters": [],
            "regex_rewrite": {},
            "rewrite": "/ambassador/v0/check_ready",
            "timeout_ms": 10000
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "--internal--"
            ],
            "_rkey": "ir.ambassador",
            "default_class": "httpmapping",
            "group_id": "7df546235997704c909d473af2cbcb5e606d20de",
            "group_weight": [
                0,
                26,
                0,
                0,
                "/ambassador/v0/check_alive",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "--internal--",
            "mappings": [
                {
                    "_active": true,
                    "_cache_key": "IRHTTPMapping-v2-internal_liveness_probe_mapping-default",
                    "_errored": false,
                    "_referenced_by": [
                        "--internal--"
                    ],
                    "_rkey": "ir.ambassador",
                    "add_request_headers": {},
                    "add_response_headers": {},
                    "cluster": {
                        "_active": true,
                        "_cache_key": "Cluster-cluster_127_0_0_1_8877_default",
                        "_errored": false,
                        "_hostname": "127.0.0.1",
                        "_is_sidecar": false,
                        "_namespace": "default",
                        "_port": 8877,
                        "_referenced_by": [
                            "--internal--"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_127_0_0_1_8877_default",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "--internal--",
                        "name": "cluster_127_0_0_1_8877_default",
                        "namespace": "default",
                        "service": "127.0.0.1:8877",
                        "targets": [
                            {
                                "ip": "127.0.0.1",
                                "port": 8877,
                                "target_kind": "IPaddr"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://127.0.0.1:8877"
                        ]
                    },
                    "cluster_key": "Cluster-cluster_127_0_0_1_8877_default",
                    "default_class": "httpmapping",
                    "group_id": "7df546235997704c909d473af2cbcb5e606d20de",
                    "headers": [],
                    "kind": "IRHTTPMapping",
                    "location": "--internal--",
                    "name": "internal_liveness_probe_mapping",
                    "namespace": "default",
                    "precedence": 0,
                    "prefix": "/ambassador/v0/check_alive",
                    "query_parameters": [],
                    "regex_rewrite": {},
                    "resolver": "kubernetes-service",
                    "rewrite": "/ambassador/v0/check_alive",
                    "route_weight": [
                        0,
                        26,
                        0,
                        0,
                        "/ambassador/v0/check_alive",
                        "GET"
                    ],
                    "service": "127.0.0.1:8877",
                    "timeout_ms": 10000,
                    "weight": 100
                }
            ],
            "name": "GROUP: internal_liveness_probe_mapping",
            "namespace": "default",
            "precedence": 0,
            "prefix": "/ambassador/v0/check_alive",
            "query_parameters": [],
            "regex_rewrite": {},
            "rewrite": "/ambassador/v0/check_alive",
            "timeout_ms": 10000
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "circuitbreakingtest.default.1"
            ],
            "_rkey": "circuitbreakingtest.default.1",
            "circuit_breakers": [
                {
                    "_name": "cbdc1p1",
                    "max_connections": 1,
                    "max_pending_requests": 1,
                    "priority": "default"
                }
            ],
            "default_class": "httpmapping",
            "group_id": "8a4658d4d6a5a530599998e1c516a50cc5f2567d",
            "group_weight": [
                0,
                24,
                0,
                0,
                "/CircuitBreakingTest-pr/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "circuitbreakingtest.default.1",
            "mappings": [
                {
                    "_active": true,
                    "_cache_key": "Mapping-v2-circuitbreakingtest-http-pr-default",
                    "_errored": false,
                    "_rkey": "circuitbreakingtest.default.1",
                    "add_request_headers": {},
                    "add_response_headers": {},
                    "circuit_breakers": [
                        {
                            "_name": "cbdc1p1",
                            "max_connections": 1,
                            "max_pending_requests": 1,
                            "priority": "default"
                        }
                    ],
                    "cluster": {
                        "_active": true,
                        "_cache_key": "Cluster-cluster_circuitbreakingtest_http_default_cbdc1p1",
                        "_errored": false,
                        "_hostname": "circuitbreakingtest-http",
                        "_is_sidecar": false,
                        "_namespace": "default",
                        "_port": 80,
                        "_referenced_by": [
                            "circuitbreakingtest.default.1"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_circuitbreakingtest_http_default_cbdc1p1",
                        "circuit_breakers": [
                            {
                                "_name": "cbdc1p1",
                                "max_connections": 1,
                                "max_pending_requests": 1,
                                "priority": "default"
                            }
                        ],
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "circuitbreakingtest.default.1",
                        "name": "cluster_circuitbreakingtest_http_default_cbdc1p1",
                        "namespace": "default",
                        "service": "circuitbreakingtest-http",
                        "targets": [
                            {
                                "ip": "circuitbreakingtest-http",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://circuitbreakingtest-http:80"
                        ]
                    },
                    "cluster_key": "Cluster-cluster_circuitbreakingtest_http_default_cbdc1p1",
                    "default_class": "httpmapping",
                    "group_id": "8a4658d4d6a5a530599998e1c516a50cc5f2567d",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "circuitbreakingtest.default.1",
                    "metadata_labels": {
                        "app.kubernetes.io/component": "ambassador-service",
                        "kat-ambassador-id": "circuitbreakingtest",
                        "scope": "AmbassadorTest"
                    },
                    "name": "circuitbreakingtest-http-pr",
                    "namespace": "default",
                    "precedence": 0,
                    "prefix": "/CircuitBreakingTest-pr/",
                    "query_parameters": [],
                    "regex_rewrite": {},
                    "resolver": "kubernetes-service",
                    "rewrite": "/",
                    "route_weight": [
                        0,
                        24,
                        0,
                        0,
                        "/CircuitBreakingTest-pr/",
                        "GET"
                    ],
                    "serialization": "_force_validation: true\nambassador_id: circuitbreakingtest\napiVersion: ambassador/v1\ncircuit_breakers:\n- max_connections: 1\n  max_pending_requests: 1\n  priority: default\nkind: Mapping\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: circuitbreakingtest\n  scope: AmbassadorTest\nname: circuitbreakingtest-http-pr\nnamespace: default\nprefix: /CircuitBreakingTest-pr/\nservice: circuitbreakingtest-http\n",
                    "service": "circuitbreakingtest-http",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "circuitbreakingtest",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: circuitbreakingtest-http-pr",
            "namespace": "default",
            "precedence": 0,
            "prefix": "/CircuitBreakingTest-pr/",
            "query_parameters": [],
            "regex_rewrite": {},
            "rewrite": "/",
            "serialization": "_force_validation: true\nambassador_id: circuitbreakingtest\napiVersion: ambassador/v1\ncircuit_breakers:\n- max_connections: 1\n  max_pending_requests: 1\n  priority: default\nkind: Mapping\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: circuitbreakingtest\n  scope: AmbassadorTest\nname: circuitbreakingtest-http-pr\nnamespace: default\nprefix: /CircuitBreakingTest-pr/\nservice: circuitbreakingtest-http\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "--internal--"
            ],
            "_rkey": "ir.ambassador",
            "default_class": "httpmapping",
            "group_id": "8de18501d2044fe30db225289b318d5fda913b64",
            "group_weight": [
                0,
                15,
                0,
                0,
                "/ambassador/v0/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "--internal--",
            "mappings": [
                {
                    "_active": true,
                    "_cache_key": "IRHTTPMapping-v2-internal_diagnostics_probe_mapping-default",
                    "_errored": false,
                    "_referenced_by": [
                        "--internal--"
                    ],
                    "_rkey": "ir.ambassador",
                    "add_request_headers": {},
                    "add_response_headers": {},
                    "cluster": {
                        "_active": true,
                        "_cache_key": "Cluster-cluster_127_0_0_1_8877_default",
                        "_errored": false,
                        "_hostname": "127.0.0.1",
                        "_is_sidecar": false,
                        "_namespace": "default",
                        "_port": 8877,
                        "_referenced_by": [
                            "--internal--"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_127_0_0_1_8877_default",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "--internal--",
                        "name": "cluster_127_0_0_1_8877_default",
                        "namespace": "default",
                        "service": "127.0.0.1:8877",
                        "targets": [
                            {
                                "ip": "127.0.0.1",
                                "port": 8877,
                                "target_kind": "IPaddr"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://127.0.0.1:8877"
                        ]
                    },
                    "cluster_key": "Cluster-cluster_127_0_0_1_8877_default",
                    "default_class": "httpmapping",
                    "group_id": "8de18501d2044fe30db225289b318d5fda913b64",
                    "headers": [],
                    "kind": "IRHTTPMapping",
                    "location": "--internal--",
                    "name": "internal_diagnostics_probe_mapping",
                    "namespace": "default",
                    "precedence": 0,
                    "prefix": "/ambassador/v0/",
                    "query_parameters": [],
                    "regex_rewrite": {},
                    "resolver": "kubernetes-service",
                    "rewrite": "/ambassador/v0/",
                    "route_weight": [
                        0,
                        15,
                        0,
                        0,
                        "/ambassador/v0/",
                        "GET"
                    ],
                    "service": "127.0.0.1:8877",
                    "timeout_ms": 10000,
                    "weight": 100
                }
            ],
            "name": "GROUP: internal_diagnostics_probe_mapping",
            "namespace": "default",
            "precedence": 0,
            "prefix": "/ambassador/v0/",
            "query_parameters": [],
            "regex_rewrite": {},
            "rewrite": "/ambassador/v0/",
            "timeout_ms": 10000
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "circuitbreakingtest.default.2"
            ],
            "_rkey": "circuitbreakingtest.default.2",
            "case_sensitive": false,
            "default_class": "httpmapping",
            "group_id": "25a46fbe19636e2ffdc3b4841da364ad4b2563bb",
            "group_weight": [
                0,
                7,
                0,
                0,
                "/reset/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "circuitbreakingtest.default.2",
            "mappings": [
                {
                    "_active": true,
                    "_cache_key": "Mapping-v2-CircuitBreakingTest-reset-default",
                    "_errored": false,
                    "_rkey": "circuitbreakingtest.default.2",
                    "add_request_headers": {},
                    "add_response_headers": {},
                    "case_sensitive": false,
                    "cluster": {
                        "_active": true,
                        "_cache_key": "Cluster-cluster_cbstatsd_sink_default",
                        "_errored": false,
                        "_hostname": "cbstatsd-sink",
                        "_is_sidecar": false,
                        "_namespace": "default",
                        "_port": 80,
                        "_referenced_by": [
                            "circuitbreakingtest.default.2",
                            "circuitbreakingtest.default.3"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_cbstatsd_sink_default",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "circuitbreakingtest.default.2",
                        "name": "cluster_cbstatsd_sink_default",
                        "namespace": "default",
                        "service": "cbstatsd-sink",
                        "targets": [
                            {
                                "ip": "cbstatsd-sink",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://cbstatsd-sink:80"
                        ]
                    },
                    "cluster_key": "Cluster-cluster_cbstatsd_sink_default",
                    "default_class": "httpmapping",
                    "group_id": "25a46fbe19636e2ffdc3b4841da364ad4b2563bb",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "circuitbreakingtest.default.2",
                    "metadata_labels": {
                        "app.kubernetes.io/component": "ambassador-service",
                        "kat-ambassador-id": "circuitbreakingtest",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CircuitBreakingTest-reset",
                    "namespace": "default",
                    "precedence": 0,
                    "prefix": "/reset/",
                    "query_parameters": [],
                    "regex_rewrite": {},
                    "resolver": "kubernetes-service",
                    "rewrite": "/RESET/",
                    "route_weight": [
                        0,
                        7,
                        0,
                        0,
                        "/reset/",
                        "GET"
                    ],
                    "serialization": "_force_validation: true\nambassador_id: circuitbreakingtest\napiVersion: ambassador/v1\ncase_sensitive: false\nkind: Mapping\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: circuitbreakingtest\n  scope: AmbassadorTest\nname: CircuitBreakingTest-reset\nnamespace: default\nprefix: /reset/\nrewrite: /RESET/\nservice: cbstatsd-sink\n",
                    "service": "cbstatsd-sink",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "circuitbreakingtest",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: CircuitBreakingTest-reset",
            "namespace": "default",
            "precedence": 0,
            "prefix": "/reset/",
            "query_parameters": [],
            "regex_rewrite": {},
            "rewrite": "/RESET/",
            "serialization": "_force_validation: true\nambassador_id: circuitbreakingtest\napiVersion: ambassador/v1\ncase_sensitive: false\nkind: Mapping\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: circuitbreakingtest\n  scope: AmbassadorTest\nname: CircuitBreakingTest-reset\nnamespace: default\nprefix: /reset/\nrewrite: /RESET/\nservice: cbstatsd-sink\n"
        },
        {
            "_active": true,
            "_errored": false,
            "_referenced_by": [
                "circuitbreakingtest.default.3"
            ],
            "_rkey": "circuitbreakingtest.default.3",
            "case_sensitive": false,
            "default_class": "httpmapping",
            "group_id": "169443c501b81b48171c12a27363e853bdabe038",
            "group_weight": [
                0,
                6,
                0,
                0,
                "/dump/",
                "GET"
            ],
            "headers": [],
            "kind": "IRHTTPMappingGroup",
            "location": "circuitbreakingtest.default.3",
            "mappings": [
                {
                    "_active": true,
                    "_cache_key": "Mapping-v2-CircuitBreakingTest-dump-default",
                    "_errored": false,
                    "_rkey": "circuitbreakingtest.default.3",
                    "add_request_headers": {},
                    "add_response_headers": {},
                    "case_sensitive": false,
                    "cluster": {
                        "_active": true,
                        "_cache_key": "Cluster-cluster_cbstatsd_sink_default",
                        "_errored": false,
                        "_hostname": "cbstatsd-sink",
                        "_is_sidecar": false,
                        "_namespace": "default",
                        "_port": 80,
                        "_referenced_by": [
                            "circuitbreakingtest.default.2",
                            "circuitbreakingtest.default.3"
                        ],
                        "_resolver": "kubernetes-service",
                        "_rkey": "cluster_cbstatsd_sink_default",
                        "connect_timeout_ms": 3000,
                        "enable_endpoints": false,
                        "enable_ipv4": true,
                        "enable_ipv6": false,
                        "ignore_cluster": false,
                        "kind": "IRCluster",
                        "lb_type": "round_robin",
                        "location": "circuitbreakingtest.default.2",
                        "name": "cluster_cbstatsd_sink_default",
                        "namespace": "default",
                        "service": "cbstatsd-sink",
                        "targets": [
                            {
                                "ip": "cbstatsd-sink",
                                "port": 80,
                                "target_kind": "DNSname"
                            }
                        ],
                        "type": "strict_dns",
                        "urls": [
                            "tcp://cbstatsd-sink:80"
                        ]
                    },
                    "cluster_key": "Cluster-cluster_cbstatsd_sink_default",
                    "default_class": "httpmapping",
                    "group_id": "169443c501b81b48171c12a27363e853bdabe038",
                    "headers": [],
                    "kind": "Mapping",
                    "location": "circuitbreakingtest.default.3",
                    "metadata_labels": {
                        "app.kubernetes.io/component": "ambassador-service",
                        "kat-ambassador-id": "circuitbreakingtest",
                        "scope": "AmbassadorTest"
                    },
                    "name": "CircuitBreakingTest-dump",
                    "namespace": "default",
                    "precedence": 0,
                    "prefix": "/dump/",
                    "query_parameters": [],
                    "regex_rewrite": {},
                    "resolver": "kubernetes-service",
                    "rewrite": "/DUMP/",
                    "route_weight": [
                        0,
                        6,
                        0,
                        0,
                        "/dump/",
                        "GET"
                    ],
                    "serialization": "_force_validation: true\nambassador_id: circuitbreakingtest\napiVersion: ambassador/v1\ncase_sensitive: false\nkind: Mapping\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: circuitbreakingtest\n  scope: AmbassadorTest\nname: CircuitBreakingTest-dump\nnamespace: default\nprefix: /dump/\nrewrite: /DUMP/\nservice: cbstatsd-sink\n",
                    "service": "cbstatsd-sink",
                    "weight": 100
                }
            ],
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "circuitbreakingtest",
                "scope": "AmbassadorTest"
            },
            "name": "GROUP: CircuitBreakingTest-dump",
            "namespace": "default",
            "precedence": 0,
            "prefix": "/dump/",
            "query_parameters": [],
            "regex_rewrite": {},
            "rewrite": "/DUMP/",
            "serialization": "_force_validation: true\nambassador_id: circuitbreakingtest\napiVersion: ambassador/v1\ncase_sensitive: false\nkind: Mapping\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: circuitbreakingtest\n  scope: AmbassadorTest\nname: CircuitBreakingTest-dump\nnamespace: default\nprefix: /dump/\nrewrite: /DUMP/\nservice: cbstatsd-sink\n"
        }
    ],
    "grpc_services": {},
    "hosts": [],
    "identity": {
        "ambassador_id": "circuitbreakingtest",
        "ambassador_namespace": "default",
        "ambassador_nodename": "circuitbreakingtest-default"
    },
    "k8s_status_updates": {},
    "listeners": [
        {
            "_active": true,
            "_errored": false,
            "_rkey": "ir.listener",
            "hostname": "*",
            "insecure_action": "Route",
            "kind": "IRListener",
            "location": "--internal--",
            "name": "ir.listener",
            "namespace": "default",
            "redirect_listener": false,
            "secure_action": "Route",
            "service_port": 8080,
            "use_proxy_proto": false
        }
    ],
    "services": {
        "k8s-acceptancegrpcbridgetest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-acceptancegrpcbridgetest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "acceptancegrpcbridgetest",
                "scope": "AmbassadorTest",
                "service": "acceptancegrpcbridgetest-admin"
            },
            "name": "acceptancegrpcbridgetest-admin",
            "namespace": "default",
            "rkey": "k8s-acceptancegrpcbridgetest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: acceptancegrpcbridgetest\n  scope: AmbassadorTest\n  service: acceptancegrpcbridgetest-admin\nname: acceptancegrpcbridgetest-admin\nnamespace: default\n"
        },
        "k8s-acceptancegrpcbridgetest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-acceptancegrpcbridgetest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "acceptancegrpcbridgetest",
                "scope": "AmbassadorTest"
            },
            "name": "acceptancegrpcbridgetest",
            "namespace": "default",
            "rkey": "k8s-acceptancegrpcbridgetest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: acceptancegrpcbridgetest\n  scope: AmbassadorTest\nname: acceptancegrpcbridgetest\nnamespace: default\n"
        },
        "k8s-acceptancegrpcbridgetest-egrpc-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-acceptancegrpcbridgetest-egrpc-default",
            "metadata_labels": {
                "kat-ambassador-id": "acceptancegrpcbridgetest",
                "scope": "AmbassadorTest"
            },
            "name": "acceptancegrpcbridgetest-egrpc",
            "namespace": "default",
            "rkey": "k8s-acceptancegrpcbridgetest-egrpc-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: acceptancegrpcbridgetest\n  scope: AmbassadorTest\nname: acceptancegrpcbridgetest-egrpc\nnamespace: default\n"
        },
        "k8s-acceptancegrpctest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-acceptancegrpctest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "acceptancegrpctest",
                "scope": "AmbassadorTest",
                "service": "acceptancegrpctest-admin"
            },
            "name": "acceptancegrpctest-admin",
            "namespace": "default",
            "rkey": "k8s-acceptancegrpctest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: acceptancegrpctest\n  scope: AmbassadorTest\n  service: acceptancegrpctest-admin\nname: acceptancegrpctest-admin\nnamespace: default\n"
        },
        "k8s-acceptancegrpctest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-acceptancegrpctest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "acceptancegrpctest",
                "scope": "AmbassadorTest"
            },
            "name": "acceptancegrpctest",
            "namespace": "default",
            "rkey": "k8s-acceptancegrpctest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: acceptancegrpctest\n  scope: AmbassadorTest\nname: acceptancegrpctest\nnamespace: default\n"
        },
        "k8s-acceptancegrpctest-egrpc-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-acceptancegrpctest-egrpc-default",
            "metadata_labels": {
                "kat-ambassador-id": "acceptancegrpctest",
                "scope": "AmbassadorTest"
            },
            "name": "acceptancegrpctest-egrpc",
            "namespace": "default",
            "rkey": "k8s-acceptancegrpctest-egrpc-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: acceptancegrpctest\n  scope: AmbassadorTest\nname: acceptancegrpctest-egrpc\nnamespace: default\n"
        },
        "k8s-acceptancegrpcwebtest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-acceptancegrpcwebtest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "acceptancegrpcwebtest",
                "scope": "AmbassadorTest",
                "service": "acceptancegrpcwebtest-admin"
            },
            "name": "acceptancegrpcwebtest-admin",
            "namespace": "default",
            "rkey": "k8s-acceptancegrpcwebtest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: acceptancegrpcwebtest\n  scope: AmbassadorTest\n  service: acceptancegrpcwebtest-admin\nname: acceptancegrpcwebtest-admin\nnamespace: default\n"
        },
        "k8s-acceptancegrpcwebtest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-acceptancegrpcwebtest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "acceptancegrpcwebtest",
                "scope": "AmbassadorTest"
            },
            "name": "acceptancegrpcwebtest",
            "namespace": "default",
            "rkey": "k8s-acceptancegrpcwebtest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: acceptancegrpcwebtest\n  scope: AmbassadorTest\nname: acceptancegrpcwebtest\nnamespace: default\n"
        },
        "k8s-acceptancegrpcwebtest-egrpc-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-acceptancegrpcwebtest-egrpc-default",
            "metadata_labels": {
                "kat-ambassador-id": "acceptancegrpcwebtest",
                "scope": "AmbassadorTest"
            },
            "name": "acceptancegrpcwebtest-egrpc",
            "namespace": "default",
            "rkey": "k8s-acceptancegrpcwebtest-egrpc-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: acceptancegrpcwebtest\n  scope: AmbassadorTest\nname: acceptancegrpcwebtest-egrpc\nnamespace: default\n"
        },
        "k8s-activator-service-knative-serving": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-activator-service-knative-serving",
            "metadata_labels": {
                "app": "activator",
                "serving.knative.dev/release": "v0.11.0"
            },
            "name": "activator-service",
            "namespace": "knative-serving",
            "rkey": "k8s-activator-service-knative-serving",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app: activator\n  serving.knative.dev/release: v0.11.0\nname: activator-service\nnamespace: knative-serving\n"
        },
        "k8s-ambassador-admin-knative-testing": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ambassador-admin-knative-testing",
            "metadata_labels": {
                "service": "ambassador-admin"
            },
            "name": "ambassador-admin",
            "namespace": "knative-testing",
            "rkey": "k8s-ambassador-admin-knative-testing",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  service: ambassador-admin\nname: ambassador-admin\nnamespace: knative-testing\n"
        },
        "k8s-ambassador-admin-watt-rapid": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ambassador-admin-watt-rapid",
            "metadata_labels": {
                "service": "ambassador-admin"
            },
            "name": "ambassador-admin",
            "namespace": "watt-rapid",
            "rkey": "k8s-ambassador-admin-watt-rapid",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  service: ambassador-admin\nname: ambassador-admin\nnamespace: watt-rapid\n"
        },
        "k8s-ambassador-knative-testing": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ambassador-knative-testing",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service"
            },
            "name": "ambassador",
            "namespace": "knative-testing",
            "rkey": "k8s-ambassador-knative-testing",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\nname: ambassador\nnamespace: knative-testing\n"
        },
        "k8s-ambassador-watt-rapid": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ambassador-watt-rapid",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service"
            },
            "name": "ambassador",
            "namespace": "watt-rapid",
            "rkey": "k8s-ambassador-watt-rapid",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\nname: ambassador\nnamespace: watt-rapid\n"
        },
        "k8s-ambassadoridtest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ambassadoridtest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "ambassadoridtest",
                "scope": "AmbassadorTest",
                "service": "ambassadoridtest-admin"
            },
            "name": "ambassadoridtest-admin",
            "namespace": "default",
            "rkey": "k8s-ambassadoridtest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: ambassadoridtest\n  scope: AmbassadorTest\n  service: ambassadoridtest-admin\nname: ambassadoridtest-admin\nnamespace: default\n"
        },
        "k8s-ambassadoridtest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ambassadoridtest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "ambassadoridtest",
                "scope": "AmbassadorTest"
            },
            "name": "ambassadoridtest",
            "namespace": "default",
            "rkey": "k8s-ambassadoridtest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: ambassadoridtest\n  scope: AmbassadorTest\nname: ambassadoridtest\nnamespace: default\n"
        },
        "k8s-ambassadoridtest-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ambassadoridtest-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "ambassadoridtest",
                "scope": "AmbassadorTest"
            },
            "name": "ambassadoridtest-http",
            "namespace": "default",
            "rkey": "k8s-ambassadoridtest-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: ambassadoridtest\n  scope: AmbassadorTest\nname: ambassadoridtest-http\nnamespace: default\n"
        },
        "k8s-authenticationgrpctest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationgrpctest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "authenticationgrpctest",
                "scope": "AmbassadorTest",
                "service": "authenticationgrpctest-admin"
            },
            "name": "authenticationgrpctest-admin",
            "namespace": "default",
            "rkey": "k8s-authenticationgrpctest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: authenticationgrpctest\n  scope: AmbassadorTest\n  service: authenticationgrpctest-admin\nname: authenticationgrpctest-admin\nnamespace: default\n"
        },
        "k8s-authenticationgrpctest-agrpc-auth-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationgrpctest-agrpc-auth-default",
            "metadata_labels": {
                "kat-ambassador-id": "authenticationgrpctest",
                "scope": "AmbassadorTest"
            },
            "name": "authenticationgrpctest-agrpc-auth",
            "namespace": "default",
            "rkey": "k8s-authenticationgrpctest-agrpc-auth-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: authenticationgrpctest\n  scope: AmbassadorTest\nname: authenticationgrpctest-agrpc-auth\nnamespace: default\n"
        },
        "k8s-authenticationgrpctest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationgrpctest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "authenticationgrpctest",
                "scope": "AmbassadorTest"
            },
            "name": "authenticationgrpctest",
            "namespace": "default",
            "rkey": "k8s-authenticationgrpctest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: authenticationgrpctest\n  scope: AmbassadorTest\nname: authenticationgrpctest\nnamespace: default\n"
        },
        "k8s-authenticationgrpctest-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationgrpctest-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "authenticationgrpctest",
                "scope": "AmbassadorTest"
            },
            "name": "authenticationgrpctest-http",
            "namespace": "default",
            "rkey": "k8s-authenticationgrpctest-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: authenticationgrpctest\n  scope: AmbassadorTest\nname: authenticationgrpctest-http\nnamespace: default\n"
        },
        "k8s-authenticationheaderrouting-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationheaderrouting-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "authenticationheaderrouting",
                "scope": "AmbassadorTest",
                "service": "authenticationheaderrouting-admin"
            },
            "name": "authenticationheaderrouting-admin",
            "namespace": "default",
            "rkey": "k8s-authenticationheaderrouting-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: authenticationheaderrouting\n  scope: AmbassadorTest\n  service: authenticationheaderrouting-admin\nname: authenticationheaderrouting-admin\nnamespace: default\n"
        },
        "k8s-authenticationheaderrouting-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationheaderrouting-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "authenticationheaderrouting",
                "scope": "AmbassadorTest"
            },
            "name": "authenticationheaderrouting",
            "namespace": "default",
            "rkey": "k8s-authenticationheaderrouting-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: authenticationheaderrouting\n  scope: AmbassadorTest\nname: authenticationheaderrouting\nnamespace: default\n"
        },
        "k8s-authenticationheaderrouting-headerroutingauth-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationheaderrouting-headerroutingauth-default",
            "metadata_labels": {
                "kat-ambassador-id": "authenticationheaderrouting",
                "scope": "AmbassadorTest"
            },
            "name": "authenticationheaderrouting-headerroutingauth",
            "namespace": "default",
            "rkey": "k8s-authenticationheaderrouting-headerroutingauth-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: authenticationheaderrouting\n  scope: AmbassadorTest\nname: authenticationheaderrouting-headerroutingauth\nnamespace: default\n"
        },
        "k8s-authenticationheaderrouting-http-target1-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationheaderrouting-http-target1-default",
            "metadata_labels": {
                "kat-ambassador-id": "authenticationheaderrouting",
                "scope": "AmbassadorTest"
            },
            "name": "authenticationheaderrouting-http-target1",
            "namespace": "default",
            "rkey": "k8s-authenticationheaderrouting-http-target1-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: authenticationheaderrouting\n  scope: AmbassadorTest\nname: authenticationheaderrouting-http-target1\nnamespace: default\n"
        },
        "k8s-authenticationheaderrouting-http-target2-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationheaderrouting-http-target2-default",
            "metadata_labels": {
                "kat-ambassador-id": "authenticationheaderrouting",
                "scope": "AmbassadorTest"
            },
            "name": "authenticationheaderrouting-http-target2",
            "namespace": "default",
            "rkey": "k8s-authenticationheaderrouting-http-target2-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: authenticationheaderrouting\n  scope: AmbassadorTest\nname: authenticationheaderrouting-http-target2\nnamespace: default\n"
        },
        "k8s-authenticationhttpbufferedtest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationhttpbufferedtest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "authenticationhttpbufferedtest",
                "scope": "AmbassadorTest",
                "service": "authenticationhttpbufferedtest-admin"
            },
            "name": "authenticationhttpbufferedtest-admin",
            "namespace": "default",
            "rkey": "k8s-authenticationhttpbufferedtest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: authenticationhttpbufferedtest\n  scope: AmbassadorTest\n  service: authenticationhttpbufferedtest-admin\nname: authenticationhttpbufferedtest-admin\nnamespace: default\n"
        },
        "k8s-authenticationhttpbufferedtest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationhttpbufferedtest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "authenticationhttpbufferedtest",
                "scope": "AmbassadorTest"
            },
            "name": "authenticationhttpbufferedtest",
            "namespace": "default",
            "rkey": "k8s-authenticationhttpbufferedtest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: authenticationhttpbufferedtest\n  scope: AmbassadorTest\nname: authenticationhttpbufferedtest\nnamespace: default\n"
        },
        "k8s-authenticationhttpbufferedtest-http-auth-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationhttpbufferedtest-http-auth-default",
            "metadata_labels": {
                "kat-ambassador-id": "authenticationhttpbufferedtest",
                "scope": "AmbassadorTest"
            },
            "name": "authenticationhttpbufferedtest-http-auth",
            "namespace": "default",
            "rkey": "k8s-authenticationhttpbufferedtest-http-auth-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: authenticationhttpbufferedtest\n  scope: AmbassadorTest\nname: authenticationhttpbufferedtest-http-auth\nnamespace: default\n"
        },
        "k8s-authenticationhttpbufferedtest-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationhttpbufferedtest-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "authenticationhttpbufferedtest",
                "scope": "AmbassadorTest"
            },
            "name": "authenticationhttpbufferedtest-http",
            "namespace": "default",
            "rkey": "k8s-authenticationhttpbufferedtest-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: authenticationhttpbufferedtest\n  scope: AmbassadorTest\nname: authenticationhttpbufferedtest-http\nnamespace: default\n"
        },
        "k8s-authenticationhttpfailuremodeallowtest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationhttpfailuremodeallowtest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "authenticationhttpfailuremodeallowtest",
                "scope": "AmbassadorTest",
                "service": "authenticationhttpfailuremodeallowtest-admin"
            },
            "name": "authenticationhttpfailuremodeallowtest-admin",
            "namespace": "default",
            "rkey": "k8s-authenticationhttpfailuremodeallowtest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: authenticationhttpfailuremodeallowtest\n  scope: AmbassadorTest\n  service: authenticationhttpfailuremodeallowtest-admin\nname: authenticationhttpfailuremodeallowtest-admin\nnamespace: default\n"
        },
        "k8s-authenticationhttpfailuremodeallowtest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationhttpfailuremodeallowtest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "authenticationhttpfailuremodeallowtest",
                "scope": "AmbassadorTest"
            },
            "name": "authenticationhttpfailuremodeallowtest",
            "namespace": "default",
            "rkey": "k8s-authenticationhttpfailuremodeallowtest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: authenticationhttpfailuremodeallowtest\n  scope: AmbassadorTest\nname: authenticationhttpfailuremodeallowtest\nnamespace: default\n"
        },
        "k8s-authenticationhttpfailuremodeallowtest-http-auth-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationhttpfailuremodeallowtest-http-auth-default",
            "metadata_labels": {
                "kat-ambassador-id": "authenticationhttpfailuremodeallowtest",
                "scope": "AmbassadorTest"
            },
            "name": "authenticationhttpfailuremodeallowtest-http-auth",
            "namespace": "default",
            "rkey": "k8s-authenticationhttpfailuremodeallowtest-http-auth-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: authenticationhttpfailuremodeallowtest\n  scope: AmbassadorTest\nname: authenticationhttpfailuremodeallowtest-http-auth\nnamespace: default\n"
        },
        "k8s-authenticationhttpfailuremodeallowtest-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationhttpfailuremodeallowtest-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "authenticationhttpfailuremodeallowtest",
                "scope": "AmbassadorTest"
            },
            "name": "authenticationhttpfailuremodeallowtest-http",
            "namespace": "default",
            "rkey": "k8s-authenticationhttpfailuremodeallowtest-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: authenticationhttpfailuremodeallowtest\n  scope: AmbassadorTest\nname: authenticationhttpfailuremodeallowtest-http\nnamespace: default\n"
        },
        "k8s-authenticationhttppartialbuffertest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationhttppartialbuffertest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "authenticationhttppartialbuffertest",
                "scope": "AmbassadorTest",
                "service": "authenticationhttppartialbuffertest-admin"
            },
            "name": "authenticationhttppartialbuffertest-admin",
            "namespace": "default",
            "rkey": "k8s-authenticationhttppartialbuffertest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: authenticationhttppartialbuffertest\n  scope: AmbassadorTest\n  service: authenticationhttppartialbuffertest-admin\nname: authenticationhttppartialbuffertest-admin\nnamespace: default\n"
        },
        "k8s-authenticationhttppartialbuffertest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationhttppartialbuffertest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "authenticationhttppartialbuffertest",
                "scope": "AmbassadorTest"
            },
            "name": "authenticationhttppartialbuffertest",
            "namespace": "default",
            "rkey": "k8s-authenticationhttppartialbuffertest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: authenticationhttppartialbuffertest\n  scope: AmbassadorTest\nname: authenticationhttppartialbuffertest\nnamespace: default\n"
        },
        "k8s-authenticationhttppartialbuffertest-http-auth-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationhttppartialbuffertest-http-auth-default",
            "metadata_labels": {
                "kat-ambassador-id": "authenticationhttppartialbuffertest",
                "scope": "AmbassadorTest"
            },
            "name": "authenticationhttppartialbuffertest-http-auth",
            "namespace": "default",
            "rkey": "k8s-authenticationhttppartialbuffertest-http-auth-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: authenticationhttppartialbuffertest\n  scope: AmbassadorTest\nname: authenticationhttppartialbuffertest-http-auth\nnamespace: default\n"
        },
        "k8s-authenticationhttppartialbuffertest-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationhttppartialbuffertest-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "authenticationhttppartialbuffertest",
                "scope": "AmbassadorTest"
            },
            "name": "authenticationhttppartialbuffertest-http",
            "namespace": "default",
            "rkey": "k8s-authenticationhttppartialbuffertest-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: authenticationhttppartialbuffertest\n  scope: AmbassadorTest\nname: authenticationhttppartialbuffertest-http\nnamespace: default\n"
        },
        "k8s-authenticationtest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationtest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "authenticationtest",
                "scope": "AmbassadorTest",
                "service": "authenticationtest-admin"
            },
            "name": "authenticationtest-admin",
            "namespace": "default",
            "rkey": "k8s-authenticationtest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: authenticationtest\n  scope: AmbassadorTest\n  service: authenticationtest-admin\nname: authenticationtest-admin\nnamespace: default\n"
        },
        "k8s-authenticationtest-ahttp-auth-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationtest-ahttp-auth-default",
            "metadata_labels": {
                "kat-ambassador-id": "authenticationtest",
                "scope": "AmbassadorTest"
            },
            "name": "authenticationtest-ahttp-auth",
            "namespace": "default",
            "rkey": "k8s-authenticationtest-ahttp-auth-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: authenticationtest\n  scope: AmbassadorTest\nname: authenticationtest-ahttp-auth\nnamespace: default\n"
        },
        "k8s-authenticationtest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationtest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "authenticationtest",
                "scope": "AmbassadorTest"
            },
            "name": "authenticationtest",
            "namespace": "default",
            "rkey": "k8s-authenticationtest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: authenticationtest\n  scope: AmbassadorTest\nname: authenticationtest\nnamespace: default\n"
        },
        "k8s-authenticationtest-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationtest-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "authenticationtest",
                "scope": "AmbassadorTest"
            },
            "name": "authenticationtest-http",
            "namespace": "default",
            "rkey": "k8s-authenticationtest-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: authenticationtest\n  scope: AmbassadorTest\nname: authenticationtest-http\nnamespace: default\n"
        },
        "k8s-authenticationtestv1-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationtestv1-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "authenticationtestv1",
                "scope": "AmbassadorTest",
                "service": "authenticationtestv1-admin"
            },
            "name": "authenticationtestv1-admin",
            "namespace": "default",
            "rkey": "k8s-authenticationtestv1-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: authenticationtestv1\n  scope: AmbassadorTest\n  service: authenticationtestv1-admin\nname: authenticationtestv1-admin\nnamespace: default\n"
        },
        "k8s-authenticationtestv1-ahttp-auth1-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationtestv1-ahttp-auth1-default",
            "metadata_labels": {
                "kat-ambassador-id": "authenticationtestv1",
                "scope": "AmbassadorTest"
            },
            "name": "authenticationtestv1-ahttp-auth1",
            "namespace": "default",
            "rkey": "k8s-authenticationtestv1-ahttp-auth1-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: authenticationtestv1\n  scope: AmbassadorTest\nname: authenticationtestv1-ahttp-auth1\nnamespace: default\n"
        },
        "k8s-authenticationtestv1-ahttp-auth2-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationtestv1-ahttp-auth2-default",
            "metadata_labels": {
                "kat-ambassador-id": "authenticationtestv1",
                "scope": "AmbassadorTest"
            },
            "name": "authenticationtestv1-ahttp-auth2",
            "namespace": "default",
            "rkey": "k8s-authenticationtestv1-ahttp-auth2-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: authenticationtestv1\n  scope: AmbassadorTest\nname: authenticationtestv1-ahttp-auth2\nnamespace: default\n"
        },
        "k8s-authenticationtestv1-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationtestv1-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "authenticationtestv1",
                "scope": "AmbassadorTest"
            },
            "name": "authenticationtestv1",
            "namespace": "default",
            "rkey": "k8s-authenticationtestv1-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: authenticationtestv1\n  scope: AmbassadorTest\nname: authenticationtestv1\nnamespace: default\n"
        },
        "k8s-authenticationtestv1-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationtestv1-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "authenticationtestv1",
                "scope": "AmbassadorTest"
            },
            "name": "authenticationtestv1-http",
            "namespace": "default",
            "rkey": "k8s-authenticationtestv1-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: authenticationtestv1\n  scope: AmbassadorTest\nname: authenticationtestv1-http\nnamespace: default\n"
        },
        "k8s-authenticationwebsockettest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationwebsockettest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "authenticationwebsockettest",
                "scope": "AmbassadorTest",
                "service": "authenticationwebsockettest-admin"
            },
            "name": "authenticationwebsockettest-admin",
            "namespace": "default",
            "rkey": "k8s-authenticationwebsockettest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: authenticationwebsockettest\n  scope: AmbassadorTest\n  service: authenticationwebsockettest-admin\nname: authenticationwebsockettest-admin\nnamespace: default\n"
        },
        "k8s-authenticationwebsockettest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationwebsockettest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "authenticationwebsockettest",
                "scope": "AmbassadorTest"
            },
            "name": "authenticationwebsockettest",
            "namespace": "default",
            "rkey": "k8s-authenticationwebsockettest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: authenticationwebsockettest\n  scope: AmbassadorTest\nname: authenticationwebsockettest\nnamespace: default\n"
        },
        "k8s-authenticationwebsockettest-http-auth-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-authenticationwebsockettest-http-auth-default",
            "metadata_labels": {
                "kat-ambassador-id": "authenticationwebsockettest",
                "scope": "AmbassadorTest"
            },
            "name": "authenticationwebsockettest-http-auth",
            "namespace": "default",
            "rkey": "k8s-authenticationwebsockettest-http-auth-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: authenticationwebsockettest\n  scope: AmbassadorTest\nname: authenticationwebsockettest-http-auth\nnamespace: default\n"
        },
        "k8s-autoscaler-knative-serving": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-autoscaler-knative-serving",
            "metadata_labels": {
                "app": "autoscaler",
                "serving.knative.dev/release": "v0.11.0"
            },
            "name": "autoscaler",
            "namespace": "knative-serving",
            "rkey": "k8s-autoscaler-knative-serving",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app: autoscaler\n  serving.knative.dev/release: v0.11.0\nname: autoscaler\nnamespace: knative-serving\n"
        },
        "k8s-cbstatsd-sink-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-cbstatsd-sink-default",
            "metadata_labels": {
                "kat-ambassador-id": "circuitbreakingtest",
                "scope": "AmbassadorTest",
                "service": "cbstatsd-sink"
            },
            "name": "cbstatsd-sink",
            "namespace": "default",
            "rkey": "k8s-cbstatsd-sink-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: circuitbreakingtest\n  scope: AmbassadorTest\n  service: cbstatsd-sink\nname: cbstatsd-sink\nnamespace: default\n"
        },
        "k8s-circuitbreakingtcptest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-circuitbreakingtcptest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "circuitbreakingtcptest",
                "scope": "AmbassadorTest",
                "service": "circuitbreakingtcptest-admin"
            },
            "name": "circuitbreakingtcptest-admin",
            "namespace": "default",
            "rkey": "k8s-circuitbreakingtcptest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: circuitbreakingtcptest\n  scope: AmbassadorTest\n  service: circuitbreakingtcptest-admin\nname: circuitbreakingtcptest-admin\nnamespace: default\n"
        },
        "k8s-circuitbreakingtcptest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-circuitbreakingtcptest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "circuitbreakingtcptest",
                "scope": "AmbassadorTest"
            },
            "name": "circuitbreakingtcptest",
            "namespace": "default",
            "rkey": "k8s-circuitbreakingtcptest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: circuitbreakingtcptest\n  scope: AmbassadorTest\nname: circuitbreakingtcptest\nnamespace: default\n"
        },
        "k8s-circuitbreakingtcptest-http-target1-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-circuitbreakingtcptest-http-target1-default",
            "metadata_labels": {
                "kat-ambassador-id": "circuitbreakingtcptest",
                "scope": "AmbassadorTest"
            },
            "name": "circuitbreakingtcptest-http-target1",
            "namespace": "default",
            "rkey": "k8s-circuitbreakingtcptest-http-target1-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: circuitbreakingtcptest\n  scope: AmbassadorTest\nname: circuitbreakingtcptest-http-target1\nnamespace: default\n"
        },
        "k8s-circuitbreakingtcptest-http-target2-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-circuitbreakingtcptest-http-target2-default",
            "metadata_labels": {
                "kat-ambassador-id": "circuitbreakingtcptest",
                "scope": "AmbassadorTest"
            },
            "name": "circuitbreakingtcptest-http-target2",
            "namespace": "default",
            "rkey": "k8s-circuitbreakingtcptest-http-target2-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: circuitbreakingtcptest\n  scope: AmbassadorTest\nname: circuitbreakingtcptest-http-target2\nnamespace: default\n"
        },
        "k8s-circuitbreakingtest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-circuitbreakingtest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "circuitbreakingtest",
                "scope": "AmbassadorTest",
                "service": "circuitbreakingtest-admin"
            },
            "name": "circuitbreakingtest-admin",
            "namespace": "default",
            "rkey": "k8s-circuitbreakingtest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: circuitbreakingtest\n  scope: AmbassadorTest\n  service: circuitbreakingtest-admin\nname: circuitbreakingtest-admin\nnamespace: default\n"
        },
        "k8s-circuitbreakingtest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-circuitbreakingtest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "circuitbreakingtest",
                "scope": "AmbassadorTest"
            },
            "name": "circuitbreakingtest",
            "namespace": "default",
            "rkey": "k8s-circuitbreakingtest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: circuitbreakingtest\n  scope: AmbassadorTest\nname: circuitbreakingtest\nnamespace: default\n"
        },
        "k8s-circuitbreakingtest-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-circuitbreakingtest-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "circuitbreakingtest",
                "scope": "AmbassadorTest"
            },
            "name": "circuitbreakingtest-http",
            "namespace": "default",
            "rkey": "k8s-circuitbreakingtest-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: circuitbreakingtest\n  scope: AmbassadorTest\nname: circuitbreakingtest-http\nnamespace: default\n"
        },
        "k8s-clientcertificateauthentication-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-clientcertificateauthentication-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "clientcertificateauthentication",
                "scope": "AmbassadorTest",
                "service": "clientcertificateauthentication-admin"
            },
            "name": "clientcertificateauthentication-admin",
            "namespace": "default",
            "rkey": "k8s-clientcertificateauthentication-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: clientcertificateauthentication\n  scope: AmbassadorTest\n  service: clientcertificateauthentication-admin\nname: clientcertificateauthentication-admin\nnamespace: default\n"
        },
        "k8s-clientcertificateauthentication-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-clientcertificateauthentication-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "clientcertificateauthentication",
                "scope": "AmbassadorTest"
            },
            "name": "clientcertificateauthentication",
            "namespace": "default",
            "rkey": "k8s-clientcertificateauthentication-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: clientcertificateauthentication\n  scope: AmbassadorTest\nname: clientcertificateauthentication\nnamespace: default\n"
        },
        "k8s-clientcertificateauthentication-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-clientcertificateauthentication-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "clientcertificateauthentication",
                "scope": "AmbassadorTest"
            },
            "name": "clientcertificateauthentication-http",
            "namespace": "default",
            "rkey": "k8s-clientcertificateauthentication-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: clientcertificateauthentication\n  scope: AmbassadorTest\nname: clientcertificateauthentication-http\nnamespace: default\n"
        },
        "k8s-clustertagtest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-clustertagtest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "clustertagtest",
                "scope": "AmbassadorTest",
                "service": "clustertagtest-admin"
            },
            "name": "clustertagtest-admin",
            "namespace": "default",
            "rkey": "k8s-clustertagtest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: clustertagtest\n  scope: AmbassadorTest\n  service: clustertagtest-admin\nname: clustertagtest-admin\nnamespace: default\n"
        },
        "k8s-clustertagtest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-clustertagtest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "clustertagtest",
                "scope": "AmbassadorTest"
            },
            "name": "clustertagtest",
            "namespace": "default",
            "rkey": "k8s-clustertagtest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: clustertagtest\n  scope: AmbassadorTest\nname: clustertagtest\nnamespace: default\n"
        },
        "k8s-clustertagtest-http-target1-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-clustertagtest-http-target1-default",
            "metadata_labels": {
                "kat-ambassador-id": "clustertagtest",
                "scope": "AmbassadorTest"
            },
            "name": "clustertagtest-http-target1",
            "namespace": "default",
            "rkey": "k8s-clustertagtest-http-target1-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: clustertagtest\n  scope: AmbassadorTest\nname: clustertagtest-http-target1\nnamespace: default\n"
        },
        "k8s-clustertagtest-http-target2-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-clustertagtest-http-target2-default",
            "metadata_labels": {
                "kat-ambassador-id": "clustertagtest",
                "scope": "AmbassadorTest"
            },
            "name": "clustertagtest-http-target2",
            "namespace": "default",
            "rkey": "k8s-clustertagtest-http-target2-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: clustertagtest\n  scope: AmbassadorTest\nname: clustertagtest-http-target2\nnamespace: default\n"
        },
        "k8s-consultest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-consultest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "consultest",
                "scope": "AmbassadorTest",
                "service": "consultest-admin"
            },
            "name": "consultest-admin",
            "namespace": "default",
            "rkey": "k8s-consultest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: consultest\n  scope: AmbassadorTest\n  service: consultest-admin\nname: consultest-admin\nnamespace: default\n"
        },
        "k8s-consultest-consul-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-consultest-consul-default",
            "metadata_labels": {
                "kat-ambassador-id": "consultest",
                "scope": "AmbassadorTest"
            },
            "name": "consultest-consul",
            "namespace": "default",
            "rkey": "k8s-consultest-consul-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: consultest\n  scope: AmbassadorTest\nname: consultest-consul\nnamespace: default\n"
        },
        "k8s-consultest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-consultest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "consultest",
                "scope": "AmbassadorTest"
            },
            "name": "consultest",
            "namespace": "default",
            "rkey": "k8s-consultest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: consultest\n  scope: AmbassadorTest\nname: consultest\nnamespace: default\n"
        },
        "k8s-consultest-http-k8s-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-consultest-http-k8s-default",
            "metadata_labels": {
                "kat-ambassador-id": "consultest",
                "scope": "AmbassadorTest"
            },
            "name": "consultest-http-k8s",
            "namespace": "default",
            "rkey": "k8s-consultest-http-k8s-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: consultest\n  scope: AmbassadorTest\nname: consultest-http-k8s\nnamespace: default\n"
        },
        "k8s-controller-knative-serving": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-controller-knative-serving",
            "metadata_labels": {
                "app": "controller",
                "serving.knative.dev/release": "v0.11.0"
            },
            "name": "controller",
            "namespace": "knative-serving",
            "rkey": "k8s-controller-knative-serving",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app: controller\n  serving.knative.dev/release: v0.11.0\nname: controller\nnamespace: knative-serving\n"
        },
        "k8s-default-http-backend-kube-system": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-default-http-backend-kube-system",
            "metadata_labels": {
                "addonmanager.kubernetes.io/mode": "Reconcile",
                "k8s-app": "glbc",
                "kubernetes.io/cluster-service": "true",
                "kubernetes.io/name": "GLBCDefaultBackend"
            },
            "name": "default-http-backend",
            "namespace": "kube-system",
            "rkey": "k8s-default-http-backend-kube-system",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  addonmanager.kubernetes.io/mode: Reconcile\n  k8s-app: glbc\n  kubernetes.io/cluster-service: 'true'\n  kubernetes.io/name: GLBCDefaultBackend\nname: default-http-backend\nnamespace: kube-system\n"
        },
        "k8s-empty-admin-empty-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-empty-admin-empty-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "empty",
                "scope": "AmbassadorTest",
                "service": "empty-admin"
            },
            "name": "empty-admin",
            "namespace": "empty-namespace",
            "rkey": "k8s-empty-admin-empty-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: empty\n  scope: AmbassadorTest\n  service: empty-admin\nname: empty-admin\nnamespace: empty-namespace\n"
        },
        "k8s-empty-empty-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-empty-empty-namespace",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "empty",
                "scope": "AmbassadorTest"
            },
            "name": "empty",
            "namespace": "empty-namespace",
            "rkey": "k8s-empty-empty-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: empty\n  scope: AmbassadorTest\nname: empty\nnamespace: empty-namespace\n"
        },
        "k8s-endpointgrpctest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-endpointgrpctest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "endpointgrpctest",
                "scope": "AmbassadorTest",
                "service": "endpointgrpctest-admin"
            },
            "name": "endpointgrpctest-admin",
            "namespace": "default",
            "rkey": "k8s-endpointgrpctest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: endpointgrpctest\n  scope: AmbassadorTest\n  service: endpointgrpctest-admin\nname: endpointgrpctest-admin\nnamespace: default\n"
        },
        "k8s-endpointgrpctest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-endpointgrpctest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "endpointgrpctest",
                "scope": "AmbassadorTest"
            },
            "name": "endpointgrpctest",
            "namespace": "default",
            "rkey": "k8s-endpointgrpctest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: endpointgrpctest\n  scope: AmbassadorTest\nname: endpointgrpctest\nnamespace: default\n"
        },
        "k8s-endpointgrpctest-egrpc-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-endpointgrpctest-egrpc-default",
            "metadata_labels": {
                "kat-ambassador-id": "endpointgrpctest",
                "scope": "AmbassadorTest"
            },
            "name": "endpointgrpctest-egrpc",
            "namespace": "default",
            "rkey": "k8s-endpointgrpctest-egrpc-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: endpointgrpctest\n  scope: AmbassadorTest\nname: endpointgrpctest-egrpc\nnamespace: default\n"
        },
        "k8s-envoylogjsontest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-envoylogjsontest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "envoylogjsontest",
                "scope": "AmbassadorTest",
                "service": "envoylogjsontest-admin"
            },
            "name": "envoylogjsontest-admin",
            "namespace": "default",
            "rkey": "k8s-envoylogjsontest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: envoylogjsontest\n  scope: AmbassadorTest\n  service: envoylogjsontest-admin\nname: envoylogjsontest-admin\nnamespace: default\n"
        },
        "k8s-envoylogjsontest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-envoylogjsontest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "envoylogjsontest",
                "scope": "AmbassadorTest"
            },
            "name": "envoylogjsontest",
            "namespace": "default",
            "rkey": "k8s-envoylogjsontest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: envoylogjsontest\n  scope: AmbassadorTest\nname: envoylogjsontest\nnamespace: default\n"
        },
        "k8s-envoylogjsontest-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-envoylogjsontest-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "envoylogjsontest",
                "scope": "AmbassadorTest"
            },
            "name": "envoylogjsontest-http",
            "namespace": "default",
            "rkey": "k8s-envoylogjsontest-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: envoylogjsontest\n  scope: AmbassadorTest\nname: envoylogjsontest-http\nnamespace: default\n"
        },
        "k8s-envoylogtest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-envoylogtest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "envoylogtest",
                "scope": "AmbassadorTest",
                "service": "envoylogtest-admin"
            },
            "name": "envoylogtest-admin",
            "namespace": "default",
            "rkey": "k8s-envoylogtest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: envoylogtest\n  scope: AmbassadorTest\n  service: envoylogtest-admin\nname: envoylogtest-admin\nnamespace: default\n"
        },
        "k8s-envoylogtest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-envoylogtest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "envoylogtest",
                "scope": "AmbassadorTest"
            },
            "name": "envoylogtest",
            "namespace": "default",
            "rkey": "k8s-envoylogtest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: envoylogtest\n  scope: AmbassadorTest\nname: envoylogtest\nnamespace: default\n"
        },
        "k8s-envoylogtest-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-envoylogtest-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "envoylogtest",
                "scope": "AmbassadorTest"
            },
            "name": "envoylogtest-http",
            "namespace": "default",
            "rkey": "k8s-envoylogtest-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: envoylogtest\n  scope: AmbassadorTest\nname: envoylogtest-http\nnamespace: default\n"
        },
        "k8s-globalcircuitbreakingtest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-globalcircuitbreakingtest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "globalcircuitbreakingtest",
                "scope": "AmbassadorTest",
                "service": "globalcircuitbreakingtest-admin"
            },
            "name": "globalcircuitbreakingtest-admin",
            "namespace": "default",
            "rkey": "k8s-globalcircuitbreakingtest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: globalcircuitbreakingtest\n  scope: AmbassadorTest\n  service: globalcircuitbreakingtest-admin\nname: globalcircuitbreakingtest-admin\nnamespace: default\n"
        },
        "k8s-globalcircuitbreakingtest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-globalcircuitbreakingtest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "globalcircuitbreakingtest",
                "scope": "AmbassadorTest"
            },
            "name": "globalcircuitbreakingtest",
            "namespace": "default",
            "rkey": "k8s-globalcircuitbreakingtest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: globalcircuitbreakingtest\n  scope: AmbassadorTest\nname: globalcircuitbreakingtest\nnamespace: default\n"
        },
        "k8s-globalcircuitbreakingtest-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-globalcircuitbreakingtest-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "globalcircuitbreakingtest",
                "scope": "AmbassadorTest"
            },
            "name": "globalcircuitbreakingtest-http",
            "namespace": "default",
            "rkey": "k8s-globalcircuitbreakingtest-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: globalcircuitbreakingtest\n  scope: AmbassadorTest\nname: globalcircuitbreakingtest-http\nnamespace: default\n"
        },
        "k8s-globalcorstest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-globalcorstest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "globalcorstest",
                "scope": "AmbassadorTest",
                "service": "globalcorstest-admin"
            },
            "name": "globalcorstest-admin",
            "namespace": "default",
            "rkey": "k8s-globalcorstest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: globalcorstest\n  scope: AmbassadorTest\n  service: globalcorstest-admin\nname: globalcorstest-admin\nnamespace: default\n"
        },
        "k8s-globalcorstest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-globalcorstest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "globalcorstest",
                "scope": "AmbassadorTest"
            },
            "name": "globalcorstest",
            "namespace": "default",
            "rkey": "k8s-globalcorstest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: globalcorstest\n  scope: AmbassadorTest\nname: globalcorstest\nnamespace: default\n"
        },
        "k8s-globalcorstest-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-globalcorstest-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "globalcorstest",
                "scope": "AmbassadorTest"
            },
            "name": "globalcorstest-http",
            "namespace": "default",
            "rkey": "k8s-globalcorstest-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: globalcorstest\n  scope: AmbassadorTest\nname: globalcorstest-http\nnamespace: default\n"
        },
        "k8s-globalloadbalancing-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-globalloadbalancing-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "globalloadbalancing",
                "scope": "AmbassadorTest",
                "service": "globalloadbalancing-admin"
            },
            "name": "globalloadbalancing-admin",
            "namespace": "default",
            "rkey": "k8s-globalloadbalancing-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: globalloadbalancing\n  scope: AmbassadorTest\n  service: globalloadbalancing-admin\nname: globalloadbalancing-admin\nnamespace: default\n"
        },
        "k8s-globalloadbalancing-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-globalloadbalancing-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "globalloadbalancing",
                "scope": "AmbassadorTest"
            },
            "name": "globalloadbalancing",
            "namespace": "default",
            "rkey": "k8s-globalloadbalancing-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: globalloadbalancing\n  scope: AmbassadorTest\nname: globalloadbalancing\nnamespace: default\n"
        },
        "k8s-globalloadbalancing-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-globalloadbalancing-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "globalloadbalancing",
                "scope": "AmbassadorTest"
            },
            "name": "globalloadbalancing-http",
            "namespace": "default",
            "rkey": "k8s-globalloadbalancing-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: globalloadbalancing\n  scope: AmbassadorTest\nname: globalloadbalancing-http\nnamespace: default\n"
        },
        "k8s-globalloadbalancing-service-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-globalloadbalancing-service-default",
            "metadata_labels": {
                "kat-ambassador-id": "globalloadbalancing",
                "scope": "AmbassadorTest"
            },
            "name": "globalloadbalancing-service",
            "namespace": "default",
            "rkey": "k8s-globalloadbalancing-service-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: globalloadbalancing\n  scope: AmbassadorTest\nname: globalloadbalancing-service\nnamespace: default\n"
        },
        "k8s-gzipminimumconfigtest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-gzipminimumconfigtest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "gzipminimumconfigtest",
                "scope": "AmbassadorTest",
                "service": "gzipminimumconfigtest-admin"
            },
            "name": "gzipminimumconfigtest-admin",
            "namespace": "default",
            "rkey": "k8s-gzipminimumconfigtest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: gzipminimumconfigtest\n  scope: AmbassadorTest\n  service: gzipminimumconfigtest-admin\nname: gzipminimumconfigtest-admin\nnamespace: default\n"
        },
        "k8s-gzipminimumconfigtest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-gzipminimumconfigtest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "gzipminimumconfigtest",
                "scope": "AmbassadorTest"
            },
            "name": "gzipminimumconfigtest",
            "namespace": "default",
            "rkey": "k8s-gzipminimumconfigtest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: gzipminimumconfigtest\n  scope: AmbassadorTest\nname: gzipminimumconfigtest\nnamespace: default\n"
        },
        "k8s-gzipminimumconfigtest-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-gzipminimumconfigtest-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "gzipminimumconfigtest",
                "scope": "AmbassadorTest"
            },
            "name": "gzipminimumconfigtest-http",
            "namespace": "default",
            "rkey": "k8s-gzipminimumconfigtest-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: gzipminimumconfigtest\n  scope: AmbassadorTest\nname: gzipminimumconfigtest-http\nnamespace: default\n"
        },
        "k8s-gzipnotsupportedcontenttypetest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-gzipnotsupportedcontenttypetest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "gzipnotsupportedcontenttypetest",
                "scope": "AmbassadorTest",
                "service": "gzipnotsupportedcontenttypetest-admin"
            },
            "name": "gzipnotsupportedcontenttypetest-admin",
            "namespace": "default",
            "rkey": "k8s-gzipnotsupportedcontenttypetest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: gzipnotsupportedcontenttypetest\n  scope: AmbassadorTest\n  service: gzipnotsupportedcontenttypetest-admin\nname: gzipnotsupportedcontenttypetest-admin\nnamespace: default\n"
        },
        "k8s-gzipnotsupportedcontenttypetest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-gzipnotsupportedcontenttypetest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "gzipnotsupportedcontenttypetest",
                "scope": "AmbassadorTest"
            },
            "name": "gzipnotsupportedcontenttypetest",
            "namespace": "default",
            "rkey": "k8s-gzipnotsupportedcontenttypetest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: gzipnotsupportedcontenttypetest\n  scope: AmbassadorTest\nname: gzipnotsupportedcontenttypetest\nnamespace: default\n"
        },
        "k8s-gzipnotsupportedcontenttypetest-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-gzipnotsupportedcontenttypetest-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "gzipnotsupportedcontenttypetest",
                "scope": "AmbassadorTest"
            },
            "name": "gzipnotsupportedcontenttypetest-http",
            "namespace": "default",
            "rkey": "k8s-gzipnotsupportedcontenttypetest-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: gzipnotsupportedcontenttypetest\n  scope: AmbassadorTest\nname: gzipnotsupportedcontenttypetest-http\nnamespace: default\n"
        },
        "k8s-gziptest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-gziptest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "gziptest",
                "scope": "AmbassadorTest",
                "service": "gziptest-admin"
            },
            "name": "gziptest-admin",
            "namespace": "default",
            "rkey": "k8s-gziptest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: gziptest\n  scope: AmbassadorTest\n  service: gziptest-admin\nname: gziptest-admin\nnamespace: default\n"
        },
        "k8s-gziptest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-gziptest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "gziptest",
                "scope": "AmbassadorTest"
            },
            "name": "gziptest",
            "namespace": "default",
            "rkey": "k8s-gziptest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: gziptest\n  scope: AmbassadorTest\nname: gziptest\nnamespace: default\n"
        },
        "k8s-gziptest-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-gziptest-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "gziptest",
                "scope": "AmbassadorTest"
            },
            "name": "gziptest-http",
            "namespace": "default",
            "rkey": "k8s-gziptest-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: gziptest\n  scope: AmbassadorTest\nname: gziptest-http\nnamespace: default\n"
        },
        "k8s-helloworld-go-s48s8-knative-testing": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-helloworld-go-s48s8-knative-testing",
            "metadata_labels": {
                "app": "helloworld-go-s48s8",
                "networking.internal.knative.dev/serverlessservice": "helloworld-go-s48s8",
                "networking.internal.knative.dev/serviceType": "Public",
                "serving.knative.dev/configuration": "helloworld-go",
                "serving.knative.dev/configurationGeneration": "1",
                "serving.knative.dev/revision": "helloworld-go-s48s8",
                "serving.knative.dev/revisionUID": "ea7b4557-3f4a-4adb-a70d-d1ee1ce34a7f",
                "serving.knative.dev/service": "helloworld-go"
            },
            "name": "helloworld-go-s48s8",
            "namespace": "knative-testing",
            "rkey": "k8s-helloworld-go-s48s8-knative-testing",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app: helloworld-go-s48s8\n  networking.internal.knative.dev/serverlessservice: helloworld-go-s48s8\n  networking.internal.knative.dev/serviceType: Public\n  serving.knative.dev/configuration: helloworld-go\n  serving.knative.dev/configurationGeneration: '1'\n  serving.knative.dev/revision: helloworld-go-s48s8\n  serving.knative.dev/revisionUID: ea7b4557-3f4a-4adb-a70d-d1ee1ce34a7f\n  serving.knative.dev/service: helloworld-go\nname: helloworld-go-s48s8\nnamespace: knative-testing\n"
        },
        "k8s-helloworld-go-s48s8-private-knative-testing": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-helloworld-go-s48s8-private-knative-testing",
            "metadata_labels": {
                "app": "helloworld-go-s48s8",
                "networking.internal.knative.dev/serverlessservice": "helloworld-go-s48s8",
                "networking.internal.knative.dev/serviceType": "Private",
                "serving.knative.dev/configuration": "helloworld-go",
                "serving.knative.dev/configurationGeneration": "1",
                "serving.knative.dev/revision": "helloworld-go-s48s8",
                "serving.knative.dev/revisionUID": "ea7b4557-3f4a-4adb-a70d-d1ee1ce34a7f",
                "serving.knative.dev/service": "helloworld-go"
            },
            "name": "helloworld-go-s48s8-private",
            "namespace": "knative-testing",
            "rkey": "k8s-helloworld-go-s48s8-private-knative-testing",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app: helloworld-go-s48s8\n  networking.internal.knative.dev/serverlessservice: helloworld-go-s48s8\n  networking.internal.knative.dev/serviceType: Private\n  serving.knative.dev/configuration: helloworld-go\n  serving.knative.dev/configurationGeneration: '1'\n  serving.knative.dev/revision: helloworld-go-s48s8\n  serving.knative.dev/revisionUID: ea7b4557-3f4a-4adb-a70d-d1ee1ce34a7f\n  serving.knative.dev/service: helloworld-go\nname: helloworld-go-s48s8-private\nnamespace: knative-testing\n"
        },
        "k8s-hostcrdcleartext-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-hostcrdcleartext-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "hostcrdcleartext",
                "scope": "AmbassadorTest",
                "service": "hostcrdcleartext-admin"
            },
            "name": "hostcrdcleartext-admin",
            "namespace": "default",
            "rkey": "k8s-hostcrdcleartext-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: hostcrdcleartext\n  scope: AmbassadorTest\n  service: hostcrdcleartext-admin\nname: hostcrdcleartext-admin\nnamespace: default\n"
        },
        "k8s-hostcrdcleartext-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-hostcrdcleartext-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "hostcrdcleartext",
                "scope": "AmbassadorTest"
            },
            "name": "hostcrdcleartext",
            "namespace": "default",
            "rkey": "k8s-hostcrdcleartext-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: hostcrdcleartext\n  scope: AmbassadorTest\nname: hostcrdcleartext\nnamespace: default\n"
        },
        "k8s-hostcrdcleartext-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-hostcrdcleartext-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "hostcrdcleartext",
                "scope": "AmbassadorTest"
            },
            "name": "hostcrdcleartext-http",
            "namespace": "default",
            "rkey": "k8s-hostcrdcleartext-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: hostcrdcleartext\n  scope: AmbassadorTest\nname: hostcrdcleartext-http\nnamespace: default\n"
        },
        "k8s-hostcrddouble-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-hostcrddouble-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "hostcrddouble",
                "scope": "AmbassadorTest",
                "service": "hostcrddouble-admin"
            },
            "name": "hostcrddouble-admin",
            "namespace": "default",
            "rkey": "k8s-hostcrddouble-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: hostcrddouble\n  scope: AmbassadorTest\n  service: hostcrddouble-admin\nname: hostcrddouble-admin\nnamespace: default\n"
        },
        "k8s-hostcrddouble-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-hostcrddouble-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "hostcrddouble",
                "scope": "AmbassadorTest"
            },
            "name": "hostcrddouble",
            "namespace": "default",
            "rkey": "k8s-hostcrddouble-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: hostcrddouble\n  scope: AmbassadorTest\nname: hostcrddouble\nnamespace: default\n"
        },
        "k8s-hostcrddouble-http-target1-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-hostcrddouble-http-target1-default",
            "metadata_labels": {
                "kat-ambassador-id": "hostcrddouble",
                "scope": "AmbassadorTest"
            },
            "name": "hostcrddouble-http-target1",
            "namespace": "default",
            "rkey": "k8s-hostcrddouble-http-target1-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: hostcrddouble\n  scope: AmbassadorTest\nname: hostcrddouble-http-target1\nnamespace: default\n"
        },
        "k8s-hostcrddouble-http-target2-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-hostcrddouble-http-target2-default",
            "metadata_labels": {
                "kat-ambassador-id": "hostcrddouble",
                "scope": "AmbassadorTest"
            },
            "name": "hostcrddouble-http-target2",
            "namespace": "default",
            "rkey": "k8s-hostcrddouble-http-target2-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: hostcrddouble\n  scope: AmbassadorTest\nname: hostcrddouble-http-target2\nnamespace: default\n"
        },
        "k8s-hostcrddouble-http-target3-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-hostcrddouble-http-target3-default",
            "metadata_labels": {
                "kat-ambassador-id": "hostcrddouble",
                "scope": "AmbassadorTest"
            },
            "name": "hostcrddouble-http-target3",
            "namespace": "default",
            "rkey": "k8s-hostcrddouble-http-target3-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: hostcrddouble\n  scope: AmbassadorTest\nname: hostcrddouble-http-target3\nnamespace: default\n"
        },
        "k8s-hostcrddouble-http-targetshared-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-hostcrddouble-http-targetshared-default",
            "metadata_labels": {
                "kat-ambassador-id": "hostcrddouble",
                "scope": "AmbassadorTest"
            },
            "name": "hostcrddouble-http-targetshared",
            "namespace": "default",
            "rkey": "k8s-hostcrddouble-http-targetshared-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: hostcrddouble\n  scope: AmbassadorTest\nname: hostcrddouble-http-targetshared\nnamespace: default\n"
        },
        "k8s-hostcrdmanualcontext-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-hostcrdmanualcontext-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "hostcrdmanualcontext",
                "scope": "AmbassadorTest",
                "service": "hostcrdmanualcontext-admin"
            },
            "name": "hostcrdmanualcontext-admin",
            "namespace": "default",
            "rkey": "k8s-hostcrdmanualcontext-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: hostcrdmanualcontext\n  scope: AmbassadorTest\n  service: hostcrdmanualcontext-admin\nname: hostcrdmanualcontext-admin\nnamespace: default\n"
        },
        "k8s-hostcrdmanualcontext-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-hostcrdmanualcontext-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "hostcrdmanualcontext",
                "scope": "AmbassadorTest"
            },
            "name": "hostcrdmanualcontext",
            "namespace": "default",
            "rkey": "k8s-hostcrdmanualcontext-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: hostcrdmanualcontext\n  scope: AmbassadorTest\nname: hostcrdmanualcontext\nnamespace: default\n"
        },
        "k8s-hostcrdmanualcontext-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-hostcrdmanualcontext-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "hostcrdmanualcontext",
                "scope": "AmbassadorTest"
            },
            "name": "hostcrdmanualcontext-http",
            "namespace": "default",
            "rkey": "k8s-hostcrdmanualcontext-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: hostcrdmanualcontext\n  scope: AmbassadorTest\nname: hostcrdmanualcontext-http\nnamespace: default\n"
        },
        "k8s-hostcrdno8080-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-hostcrdno8080-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "hostcrdno8080",
                "scope": "AmbassadorTest",
                "service": "hostcrdno8080-admin"
            },
            "name": "hostcrdno8080-admin",
            "namespace": "default",
            "rkey": "k8s-hostcrdno8080-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: hostcrdno8080\n  scope: AmbassadorTest\n  service: hostcrdno8080-admin\nname: hostcrdno8080-admin\nnamespace: default\n"
        },
        "k8s-hostcrdno8080-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-hostcrdno8080-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "hostcrdno8080",
                "scope": "AmbassadorTest"
            },
            "name": "hostcrdno8080",
            "namespace": "default",
            "rkey": "k8s-hostcrdno8080-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: hostcrdno8080\n  scope: AmbassadorTest\nname: hostcrdno8080\nnamespace: default\n"
        },
        "k8s-hostcrdno8080-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-hostcrdno8080-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "hostcrdno8080",
                "scope": "AmbassadorTest"
            },
            "name": "hostcrdno8080-http",
            "namespace": "default",
            "rkey": "k8s-hostcrdno8080-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: hostcrdno8080\n  scope: AmbassadorTest\nname: hostcrdno8080-http\nnamespace: default\n"
        },
        "k8s-hostcrdseparatetlscontext-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-hostcrdseparatetlscontext-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "hostcrdseparatetlscontext",
                "scope": "AmbassadorTest",
                "service": "hostcrdseparatetlscontext-admin"
            },
            "name": "hostcrdseparatetlscontext-admin",
            "namespace": "default",
            "rkey": "k8s-hostcrdseparatetlscontext-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: hostcrdseparatetlscontext\n  scope: AmbassadorTest\n  service: hostcrdseparatetlscontext-admin\nname: hostcrdseparatetlscontext-admin\nnamespace: default\n"
        },
        "k8s-hostcrdseparatetlscontext-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-hostcrdseparatetlscontext-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "hostcrdseparatetlscontext",
                "scope": "AmbassadorTest"
            },
            "name": "hostcrdseparatetlscontext",
            "namespace": "default",
            "rkey": "k8s-hostcrdseparatetlscontext-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: hostcrdseparatetlscontext\n  scope: AmbassadorTest\nname: hostcrdseparatetlscontext\nnamespace: default\n"
        },
        "k8s-hostcrdseparatetlscontext-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-hostcrdseparatetlscontext-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "hostcrdseparatetlscontext",
                "scope": "AmbassadorTest"
            },
            "name": "hostcrdseparatetlscontext-http",
            "namespace": "default",
            "rkey": "k8s-hostcrdseparatetlscontext-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: hostcrdseparatetlscontext\n  scope: AmbassadorTest\nname: hostcrdseparatetlscontext-http\nnamespace: default\n"
        },
        "k8s-hostcrdsingle-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-hostcrdsingle-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "hostcrdsingle",
                "scope": "AmbassadorTest",
                "service": "hostcrdsingle-admin"
            },
            "name": "hostcrdsingle-admin",
            "namespace": "default",
            "rkey": "k8s-hostcrdsingle-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: hostcrdsingle\n  scope: AmbassadorTest\n  service: hostcrdsingle-admin\nname: hostcrdsingle-admin\nnamespace: default\n"
        },
        "k8s-hostcrdsingle-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-hostcrdsingle-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "hostcrdsingle",
                "scope": "AmbassadorTest"
            },
            "name": "hostcrdsingle",
            "namespace": "default",
            "rkey": "k8s-hostcrdsingle-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: hostcrdsingle\n  scope: AmbassadorTest\nname: hostcrdsingle\nnamespace: default\n"
        },
        "k8s-hostcrdsingle-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-hostcrdsingle-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "hostcrdsingle",
                "scope": "AmbassadorTest"
            },
            "name": "hostcrdsingle-http",
            "namespace": "default",
            "rkey": "k8s-hostcrdsingle-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: hostcrdsingle\n  scope: AmbassadorTest\nname: hostcrdsingle-http\nnamespace: default\n"
        },
        "k8s-hostcrdtlsconfig-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-hostcrdtlsconfig-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "hostcrdtlsconfig",
                "scope": "AmbassadorTest",
                "service": "hostcrdtlsconfig-admin"
            },
            "name": "hostcrdtlsconfig-admin",
            "namespace": "default",
            "rkey": "k8s-hostcrdtlsconfig-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: hostcrdtlsconfig\n  scope: AmbassadorTest\n  service: hostcrdtlsconfig-admin\nname: hostcrdtlsconfig-admin\nnamespace: default\n"
        },
        "k8s-hostcrdtlsconfig-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-hostcrdtlsconfig-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "hostcrdtlsconfig",
                "scope": "AmbassadorTest"
            },
            "name": "hostcrdtlsconfig",
            "namespace": "default",
            "rkey": "k8s-hostcrdtlsconfig-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: hostcrdtlsconfig\n  scope: AmbassadorTest\nname: hostcrdtlsconfig\nnamespace: default\n"
        },
        "k8s-hostcrdtlsconfig-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-hostcrdtlsconfig-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "hostcrdtlsconfig",
                "scope": "AmbassadorTest"
            },
            "name": "hostcrdtlsconfig-http",
            "namespace": "default",
            "rkey": "k8s-hostcrdtlsconfig-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: hostcrdtlsconfig\n  scope: AmbassadorTest\nname: hostcrdtlsconfig-http\nnamespace: default\n"
        },
        "k8s-ingressstatustest1-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ingressstatustest1-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "ingressstatustest1",
                "scope": "AmbassadorTest",
                "service": "ingressstatustest1-admin"
            },
            "name": "ingressstatustest1-admin",
            "namespace": "default",
            "rkey": "k8s-ingressstatustest1-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: ingressstatustest1\n  scope: AmbassadorTest\n  service: ingressstatustest1-admin\nname: ingressstatustest1-admin\nnamespace: default\n"
        },
        "k8s-ingressstatustest1-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ingressstatustest1-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "ingressstatustest1",
                "scope": "AmbassadorTest"
            },
            "name": "ingressstatustest1",
            "namespace": "default",
            "rkey": "k8s-ingressstatustest1-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: ingressstatustest1\n  scope: AmbassadorTest\nname: ingressstatustest1\nnamespace: default\n"
        },
        "k8s-ingressstatustest1-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ingressstatustest1-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "ingressstatustest1",
                "scope": "AmbassadorTest"
            },
            "name": "ingressstatustest1-http",
            "namespace": "default",
            "rkey": "k8s-ingressstatustest1-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: ingressstatustest1\n  scope: AmbassadorTest\nname: ingressstatustest1-http\nnamespace: default\n"
        },
        "k8s-ingressstatustest2-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ingressstatustest2-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "ingressstatustest2",
                "scope": "AmbassadorTest",
                "service": "ingressstatustest2-admin"
            },
            "name": "ingressstatustest2-admin",
            "namespace": "default",
            "rkey": "k8s-ingressstatustest2-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: ingressstatustest2\n  scope: AmbassadorTest\n  service: ingressstatustest2-admin\nname: ingressstatustest2-admin\nnamespace: default\n"
        },
        "k8s-ingressstatustest2-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ingressstatustest2-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "ingressstatustest2",
                "scope": "AmbassadorTest"
            },
            "name": "ingressstatustest2",
            "namespace": "default",
            "rkey": "k8s-ingressstatustest2-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: ingressstatustest2\n  scope: AmbassadorTest\nname: ingressstatustest2\nnamespace: default\n"
        },
        "k8s-ingressstatustest2-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ingressstatustest2-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "ingressstatustest2",
                "scope": "AmbassadorTest"
            },
            "name": "ingressstatustest2-http",
            "namespace": "default",
            "rkey": "k8s-ingressstatustest2-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: ingressstatustest2\n  scope: AmbassadorTest\nname: ingressstatustest2-http\nnamespace: default\n"
        },
        "k8s-ingressstatustestacrossnamespaces-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ingressstatustestacrossnamespaces-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "ingressstatustestacrossnamespaces",
                "scope": "AmbassadorTest",
                "service": "ingressstatustestacrossnamespaces-admin"
            },
            "name": "ingressstatustestacrossnamespaces-admin",
            "namespace": "default",
            "rkey": "k8s-ingressstatustestacrossnamespaces-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: ingressstatustestacrossnamespaces\n  scope: AmbassadorTest\n  service: ingressstatustestacrossnamespaces-admin\nname: ingressstatustestacrossnamespaces-admin\nnamespace: default\n"
        },
        "k8s-ingressstatustestacrossnamespaces-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ingressstatustestacrossnamespaces-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "ingressstatustestacrossnamespaces",
                "scope": "AmbassadorTest"
            },
            "name": "ingressstatustestacrossnamespaces",
            "namespace": "default",
            "rkey": "k8s-ingressstatustestacrossnamespaces-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: ingressstatustestacrossnamespaces\n  scope: AmbassadorTest\nname: ingressstatustestacrossnamespaces\nnamespace: default\n"
        },
        "k8s-ingressstatustestacrossnamespaces-http-alt-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ingressstatustestacrossnamespaces-http-alt-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "ingressstatustestacrossnamespaces",
                "scope": "AmbassadorTest"
            },
            "name": "ingressstatustestacrossnamespaces-http",
            "namespace": "alt-namespace",
            "rkey": "k8s-ingressstatustestacrossnamespaces-http-alt-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: ingressstatustestacrossnamespaces\n  scope: AmbassadorTest\nname: ingressstatustestacrossnamespaces-http\nnamespace: alt-namespace\n"
        },
        "k8s-ingressstatustestwithannotations-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ingressstatustestwithannotations-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "ingressstatustestwithannotations",
                "scope": "AmbassadorTest",
                "service": "ingressstatustestwithannotations-admin"
            },
            "name": "ingressstatustestwithannotations-admin",
            "namespace": "default",
            "rkey": "k8s-ingressstatustestwithannotations-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: ingressstatustestwithannotations\n  scope: AmbassadorTest\n  service: ingressstatustestwithannotations-admin\nname: ingressstatustestwithannotations-admin\nnamespace: default\n"
        },
        "k8s-ingressstatustestwithannotations-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ingressstatustestwithannotations-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "ingressstatustestwithannotations",
                "scope": "AmbassadorTest"
            },
            "name": "ingressstatustestwithannotations",
            "namespace": "default",
            "rkey": "k8s-ingressstatustestwithannotations-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: ingressstatustestwithannotations\n  scope: AmbassadorTest\nname: ingressstatustestwithannotations\nnamespace: default\n"
        },
        "k8s-ingressstatustestwithannotations-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ingressstatustestwithannotations-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "ingressstatustestwithannotations",
                "scope": "AmbassadorTest"
            },
            "name": "ingressstatustestwithannotations-http",
            "namespace": "default",
            "rkey": "k8s-ingressstatustestwithannotations-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: ingressstatustestwithannotations\n  scope: AmbassadorTest\nname: ingressstatustestwithannotations-http\nnamespace: default\n"
        },
        "k8s-kube-dns-kube-system": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-kube-dns-kube-system",
            "metadata_labels": {
                "addonmanager.kubernetes.io/mode": "Reconcile",
                "k8s-app": "kube-dns",
                "kubernetes.io/cluster-service": "true",
                "kubernetes.io/name": "KubeDNS"
            },
            "name": "kube-dns",
            "namespace": "kube-system",
            "rkey": "k8s-kube-dns-kube-system",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  addonmanager.kubernetes.io/mode: Reconcile\n  k8s-app: kube-dns\n  kubernetes.io/cluster-service: 'true'\n  kubernetes.io/name: KubeDNS\nname: kube-dns\nnamespace: kube-system\n"
        },
        "k8s-kubernetes-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-kubernetes-default",
            "metadata_labels": {
                "component": "apiserver",
                "provider": "kubernetes"
            },
            "name": "kubernetes",
            "namespace": "default",
            "rkey": "k8s-kubernetes-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  component: apiserver\n  provider: kubernetes\nname: kubernetes\nnamespace: default\n"
        },
        "k8s-linkerdheadermapping-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-linkerdheadermapping-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "linkerdheadermapping",
                "scope": "AmbassadorTest",
                "service": "linkerdheadermapping-admin"
            },
            "name": "linkerdheadermapping-admin",
            "namespace": "default",
            "rkey": "k8s-linkerdheadermapping-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: linkerdheadermapping\n  scope: AmbassadorTest\n  service: linkerdheadermapping-admin\nname: linkerdheadermapping-admin\nnamespace: default\n"
        },
        "k8s-linkerdheadermapping-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-linkerdheadermapping-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "linkerdheadermapping",
                "scope": "AmbassadorTest"
            },
            "name": "linkerdheadermapping",
            "namespace": "default",
            "rkey": "k8s-linkerdheadermapping-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: linkerdheadermapping\n  scope: AmbassadorTest\nname: linkerdheadermapping\nnamespace: default\n"
        },
        "k8s-linkerdheadermapping-http-addlinkerdonly-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-linkerdheadermapping-http-addlinkerdonly-default",
            "metadata_labels": {
                "kat-ambassador-id": "linkerdheadermapping",
                "scope": "AmbassadorTest"
            },
            "name": "linkerdheadermapping-http-addlinkerdonly",
            "namespace": "default",
            "rkey": "k8s-linkerdheadermapping-http-addlinkerdonly-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: linkerdheadermapping\n  scope: AmbassadorTest\nname: linkerdheadermapping-http-addlinkerdonly\nnamespace: default\n"
        },
        "k8s-linkerdheadermapping-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-linkerdheadermapping-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "linkerdheadermapping",
                "scope": "AmbassadorTest"
            },
            "name": "linkerdheadermapping-http",
            "namespace": "default",
            "rkey": "k8s-linkerdheadermapping-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: linkerdheadermapping\n  scope: AmbassadorTest\nname: linkerdheadermapping-http\nnamespace: default\n"
        },
        "k8s-linkerdheadermapping-http-noheader-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-linkerdheadermapping-http-noheader-default",
            "metadata_labels": {
                "kat-ambassador-id": "linkerdheadermapping",
                "scope": "AmbassadorTest"
            },
            "name": "linkerdheadermapping-http-noheader",
            "namespace": "default",
            "rkey": "k8s-linkerdheadermapping-http-noheader-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: linkerdheadermapping\n  scope: AmbassadorTest\nname: linkerdheadermapping-http-noheader\nnamespace: default\n"
        },
        "k8s-listeneridletimeout-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-listeneridletimeout-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "listeneridletimeout",
                "scope": "AmbassadorTest",
                "service": "listeneridletimeout-admin"
            },
            "name": "listeneridletimeout-admin",
            "namespace": "default",
            "rkey": "k8s-listeneridletimeout-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: listeneridletimeout\n  scope: AmbassadorTest\n  service: listeneridletimeout-admin\nname: listeneridletimeout-admin\nnamespace: default\n"
        },
        "k8s-listeneridletimeout-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-listeneridletimeout-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "listeneridletimeout",
                "scope": "AmbassadorTest"
            },
            "name": "listeneridletimeout",
            "namespace": "default",
            "rkey": "k8s-listeneridletimeout-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: listeneridletimeout\n  scope: AmbassadorTest\nname: listeneridletimeout\nnamespace: default\n"
        },
        "k8s-listeneridletimeout-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-listeneridletimeout-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "listeneridletimeout",
                "scope": "AmbassadorTest"
            },
            "name": "listeneridletimeout-http",
            "namespace": "default",
            "rkey": "k8s-listeneridletimeout-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: listeneridletimeout\n  scope: AmbassadorTest\nname: listeneridletimeout-http\nnamespace: default\n"
        },
        "k8s-loadbalancertest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-loadbalancertest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "loadbalancertest",
                "scope": "AmbassadorTest",
                "service": "loadbalancertest-admin"
            },
            "name": "loadbalancertest-admin",
            "namespace": "default",
            "rkey": "k8s-loadbalancertest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: loadbalancertest\n  scope: AmbassadorTest\n  service: loadbalancertest-admin\nname: loadbalancertest-admin\nnamespace: default\n"
        },
        "k8s-loadbalancertest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-loadbalancertest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "loadbalancertest",
                "scope": "AmbassadorTest"
            },
            "name": "loadbalancertest",
            "namespace": "default",
            "rkey": "k8s-loadbalancertest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: loadbalancertest\n  scope: AmbassadorTest\nname: loadbalancertest\nnamespace: default\n"
        },
        "k8s-loadbalancertest-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-loadbalancertest-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "loadbalancertest",
                "scope": "AmbassadorTest"
            },
            "name": "loadbalancertest-http",
            "namespace": "default",
            "rkey": "k8s-loadbalancertest-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: loadbalancertest\n  scope: AmbassadorTest\nname: loadbalancertest-http\nnamespace: default\n"
        },
        "k8s-logservicetest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-logservicetest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "logservicetest",
                "scope": "AmbassadorTest",
                "service": "logservicetest-admin"
            },
            "name": "logservicetest-admin",
            "namespace": "default",
            "rkey": "k8s-logservicetest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: logservicetest\n  scope: AmbassadorTest\n  service: logservicetest-admin\nname: logservicetest-admin\nnamespace: default\n"
        },
        "k8s-logservicetest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-logservicetest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "logservicetest",
                "scope": "AmbassadorTest"
            },
            "name": "logservicetest",
            "namespace": "default",
            "rkey": "k8s-logservicetest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: logservicetest\n  scope: AmbassadorTest\nname: logservicetest\nnamespace: default\n"
        },
        "k8s-logservicetest-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-logservicetest-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "logservicetest",
                "scope": "AmbassadorTest"
            },
            "name": "logservicetest-http",
            "namespace": "default",
            "rkey": "k8s-logservicetest-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: logservicetest\n  scope: AmbassadorTest\nname: logservicetest-http\nnamespace: default\n"
        },
        "k8s-luatest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-luatest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "luatest",
                "scope": "AmbassadorTest",
                "service": "luatest-admin"
            },
            "name": "luatest-admin",
            "namespace": "default",
            "rkey": "k8s-luatest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: luatest\n  scope: AmbassadorTest\n  service: luatest-admin\nname: luatest-admin\nnamespace: default\n"
        },
        "k8s-luatest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-luatest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "luatest",
                "scope": "AmbassadorTest"
            },
            "name": "luatest",
            "namespace": "default",
            "rkey": "k8s-luatest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: luatest\n  scope: AmbassadorTest\nname: luatest\nnamespace: default\n"
        },
        "k8s-luatest-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-luatest-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "luatest",
                "scope": "AmbassadorTest"
            },
            "name": "luatest-http",
            "namespace": "default",
            "rkey": "k8s-luatest-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: luatest\n  scope: AmbassadorTest\nname: luatest-http\nnamespace: default\n"
        },
        "k8s-metrics-server-kube-system": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-metrics-server-kube-system",
            "metadata_labels": {
                "addonmanager.kubernetes.io/mode": "Reconcile",
                "kubernetes.io/cluster-service": "true",
                "kubernetes.io/name": "Metrics-server"
            },
            "name": "metrics-server",
            "namespace": "kube-system",
            "rkey": "k8s-metrics-server-kube-system",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  addonmanager.kubernetes.io/mode: Reconcile\n  kubernetes.io/cluster-service: 'true'\n  kubernetes.io/name: Metrics-server\nname: metrics-server\nnamespace: kube-system\n"
        },
        "k8s-nouitest-admin-no-ui-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-nouitest-admin-no-ui-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "nouitest",
                "scope": "AmbassadorTest",
                "service": "nouitest-admin"
            },
            "name": "nouitest-admin",
            "namespace": "no-ui-namespace",
            "rkey": "k8s-nouitest-admin-no-ui-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: nouitest\n  scope: AmbassadorTest\n  service: nouitest-admin\nname: nouitest-admin\nnamespace: no-ui-namespace\n"
        },
        "k8s-nouitest-no-ui-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-nouitest-no-ui-namespace",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "nouitest",
                "scope": "AmbassadorTest"
            },
            "name": "nouitest",
            "namespace": "no-ui-namespace",
            "rkey": "k8s-nouitest-no-ui-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: nouitest\n  scope: AmbassadorTest\nname: nouitest\nnamespace: no-ui-namespace\n"
        },
        "k8s-permappingloadbalancing-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-permappingloadbalancing-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "permappingloadbalancing",
                "scope": "AmbassadorTest",
                "service": "permappingloadbalancing-admin"
            },
            "name": "permappingloadbalancing-admin",
            "namespace": "default",
            "rkey": "k8s-permappingloadbalancing-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: permappingloadbalancing\n  scope: AmbassadorTest\n  service: permappingloadbalancing-admin\nname: permappingloadbalancing-admin\nnamespace: default\n"
        },
        "k8s-permappingloadbalancing-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-permappingloadbalancing-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "permappingloadbalancing",
                "scope": "AmbassadorTest"
            },
            "name": "permappingloadbalancing",
            "namespace": "default",
            "rkey": "k8s-permappingloadbalancing-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: permappingloadbalancing\n  scope: AmbassadorTest\nname: permappingloadbalancing\nnamespace: default\n"
        },
        "k8s-permappingloadbalancing-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-permappingloadbalancing-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "permappingloadbalancing",
                "scope": "AmbassadorTest"
            },
            "name": "permappingloadbalancing-http",
            "namespace": "default",
            "rkey": "k8s-permappingloadbalancing-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: permappingloadbalancing\n  scope: AmbassadorTest\nname: permappingloadbalancing-http\nnamespace: default\n"
        },
        "k8s-permappingloadbalancing-service-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-permappingloadbalancing-service-default",
            "metadata_labels": {
                "kat-ambassador-id": "permappingloadbalancing",
                "scope": "AmbassadorTest"
            },
            "name": "permappingloadbalancing-service",
            "namespace": "default",
            "rkey": "k8s-permappingloadbalancing-service-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: permappingloadbalancing\n  scope: AmbassadorTest\nname: permappingloadbalancing-service\nnamespace: default\n"
        },
        "k8s-plain-addreqheadersmapping-grpc-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-addreqheadersmapping-grpc-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-addreqheadersmapping-grpc-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-addreqheadersmapping-grpc-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-addreqheadersmapping-grpc-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-addreqheadersmapping-http-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-addreqheadersmapping-http-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-addreqheadersmapping-http-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-addreqheadersmapping-http-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-addreqheadersmapping-http-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-addrespheadersmapping-grpc-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-addrespheadersmapping-grpc-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-addrespheadersmapping-grpc-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-addrespheadersmapping-grpc-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-addrespheadersmapping-grpc-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-addrespheadersmapping-http-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-addrespheadersmapping-http-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-addrespheadersmapping-http-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-addrespheadersmapping-http-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-addrespheadersmapping-http-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-admin-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-admin-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest",
                "service": "plain-admin"
            },
            "name": "plain-admin",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-admin-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\n  service: plain-admin\nname: plain-admin\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-grpc-0-grpc-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-grpc-0-grpc-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-grpc-0-grpc-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-grpc-0-grpc-canary-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-grpc-0-grpc-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-grpc-0-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-grpc-0-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-grpc-0-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-grpc-0-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-grpc-0-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-grpc-10-grpc-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-grpc-10-grpc-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-grpc-10-grpc-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-grpc-10-grpc-canary-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-grpc-10-grpc-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-grpc-10-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-grpc-10-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-grpc-10-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-grpc-10-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-grpc-10-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-grpc-100-grpc-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-grpc-100-grpc-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-grpc-100-grpc-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-grpc-100-grpc-canary-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-grpc-100-grpc-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-grpc-100-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-grpc-100-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-grpc-100-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-grpc-100-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-grpc-100-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-grpc-50-grpc-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-grpc-50-grpc-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-grpc-50-grpc-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-grpc-50-grpc-canary-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-grpc-50-grpc-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-grpc-50-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-grpc-50-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-grpc-50-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-grpc-50-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-grpc-50-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-http-0-http-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-http-0-http-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-http-0-http-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-http-0-http-canary-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-http-0-http-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-http-0-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-http-0-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-http-0-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-http-0-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-http-0-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-http-10-http-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-http-10-http-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-http-10-http-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-http-10-http-canary-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-http-10-http-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-http-10-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-http-10-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-http-10-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-http-10-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-http-10-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-http-100-http-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-http-100-http-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-http-100-http-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-http-100-http-canary-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-http-100-http-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-http-100-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-http-100-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-http-100-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-http-100-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-http-100-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-http-50-http-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-http-50-http-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-http-50-http-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-http-50-http-canary-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-http-50-http-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarydiffmapping-http-50-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarydiffmapping-http-50-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarydiffmapping-http-50-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarydiffmapping-http-50-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarydiffmapping-http-50-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-grpc-0-grpc-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-grpc-0-grpc-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-grpc-0-grpc-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-grpc-0-grpc-canary-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-grpc-0-grpc-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-grpc-0-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-grpc-0-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-grpc-0-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-grpc-0-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-grpc-0-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-grpc-10-grpc-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-grpc-10-grpc-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-grpc-10-grpc-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-grpc-10-grpc-canary-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-grpc-10-grpc-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-grpc-10-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-grpc-10-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-grpc-10-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-grpc-10-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-grpc-10-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-grpc-100-grpc-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-grpc-100-grpc-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-grpc-100-grpc-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-grpc-100-grpc-canary-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-grpc-100-grpc-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-grpc-100-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-grpc-100-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-grpc-100-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-grpc-100-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-grpc-100-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-grpc-50-grpc-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-grpc-50-grpc-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-grpc-50-grpc-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-grpc-50-grpc-canary-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-grpc-50-grpc-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-grpc-50-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-grpc-50-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-grpc-50-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-grpc-50-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-grpc-50-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-http-0-http-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-http-0-http-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-http-0-http-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-http-0-http-canary-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-http-0-http-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-http-0-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-http-0-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-http-0-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-http-0-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-http-0-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-http-10-http-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-http-10-http-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-http-10-http-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-http-10-http-canary-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-http-10-http-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-http-10-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-http-10-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-http-10-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-http-10-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-http-10-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-http-100-http-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-http-100-http-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-http-100-http-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-http-100-http-canary-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-http-100-http-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-http-100-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-http-100-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-http-100-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-http-100-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-http-100-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-http-50-http-canary-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-http-50-http-canary-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-http-50-http-canary",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-http-50-http-canary-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-http-50-http-canary\nnamespace: plain-namespace\n"
        },
        "k8s-plain-canarymapping-http-50-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-canarymapping-http-50-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-canarymapping-http-50-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-canarymapping-http-50-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-canarymapping-http-50-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-edgestackmapping-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-edgestackmapping-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-edgestackmapping-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-edgestackmapping-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-edgestackmapping-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-headerroutingtest-grpc-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-headerroutingtest-grpc-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-headerroutingtest-grpc-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-headerroutingtest-grpc-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-headerroutingtest-grpc-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-headerroutingtest-grpc-grpc-target2-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-headerroutingtest-grpc-grpc-target2-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-headerroutingtest-grpc-grpc-target2",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-headerroutingtest-grpc-grpc-target2-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-headerroutingtest-grpc-grpc-target2\nnamespace: plain-namespace\n"
        },
        "k8s-plain-headerroutingtest-http-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-headerroutingtest-http-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-headerroutingtest-http-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-headerroutingtest-http-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-headerroutingtest-http-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-headerroutingtest-http-http-target2-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-headerroutingtest-http-http-target2-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-headerroutingtest-http-http-target2",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-headerroutingtest-http-http-target2-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-headerroutingtest-http-http-target2\nnamespace: plain-namespace\n"
        },
        "k8s-plain-hostheadermapping-grpc-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-hostheadermapping-grpc-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-hostheadermapping-grpc-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-hostheadermapping-grpc-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-hostheadermapping-grpc-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-hostheadermapping-http-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-hostheadermapping-http-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-hostheadermapping-http-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-hostheadermapping-http-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-hostheadermapping-http-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-hostheadermappingingress-grpc-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-hostheadermappingingress-grpc-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-hostheadermappingingress-grpc-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-hostheadermappingingress-grpc-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-hostheadermappingingress-grpc-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-hostheadermappingingress-http-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-hostheadermappingingress-http-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-hostheadermappingingress-http-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-hostheadermappingingress-http-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-hostheadermappingingress-http-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-hostredirectmapping-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-hostredirectmapping-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-hostredirectmapping-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-hostredirectmapping-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-hostredirectmapping-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-invalidportmapping-grpc-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-invalidportmapping-grpc-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-invalidportmapping-grpc-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-invalidportmapping-grpc-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-invalidportmapping-grpc-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-invalidportmapping-http-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-invalidportmapping-http-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-invalidportmapping-http-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-invalidportmapping-http-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-invalidportmapping-http-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-plain-namespace",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain\nnamespace: plain-namespace\n"
        },
        "k8s-plain-removereqheadersmapping-grpc-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-removereqheadersmapping-grpc-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-removereqheadersmapping-grpc-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-removereqheadersmapping-grpc-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-removereqheadersmapping-grpc-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-removereqheadersmapping-http-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-removereqheadersmapping-http-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-removereqheadersmapping-http-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-removereqheadersmapping-http-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-removereqheadersmapping-http-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simpleingresswithannotations-grpc-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simpleingresswithannotations-grpc-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simpleingresswithannotations-grpc-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simpleingresswithannotations-grpc-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simpleingresswithannotations-grpc-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simpleingresswithannotations-http-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simpleingresswithannotations-http-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simpleingresswithannotations-http-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simpleingresswithannotations-http-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simpleingresswithannotations-http-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-addrequestheaders-aoo-tyu-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-addrequestheaders-foo-bar-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-addrequestheaders-moo-arf-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-addrequestheaders-xoo-dwe-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-addrequestheaders-zoo-bar-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-addresponseheaders-aoo-tyu-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-addresponseheaders-foo-bar-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-addresponseheaders-moo-arf-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-addresponseheaders-xoo-dwe-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-addresponseheaders-zoo-bar-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-all-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-all-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-all-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-all-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-all-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-autohostrewrite-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-autohostrewrite-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-autohostrewrite-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-autohostrewrite-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-autohostrewrite-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-casesensitive-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-casesensitive-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-casesensitive-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-casesensitive-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-casesensitive-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-cors-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-cors-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-cors-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-cors-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-cors-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-removeresponseheaders-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-removeresponseheaders-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-removeresponseheaders-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-removeresponseheaders-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-removeresponseheaders-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-rewrite-foo-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-rewrite-foo-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-rewrite-foo-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-rewrite-foo-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-rewrite-foo-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-rewrite-slash-foo-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-rewrite-slash-foo-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-rewrite-slash-foo-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-rewrite-slash-foo-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-rewrite-slash-foo-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-grpc-usewebsocket-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-grpc-usewebsocket-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-grpc-usewebsocket-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-grpc-usewebsocket-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-grpc-usewebsocket-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-addrequestheaders-aoo-tyu-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-addrequestheaders-aoo-tyu-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-addrequestheaders-aoo-tyu-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-addrequestheaders-aoo-tyu-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-addrequestheaders-aoo-tyu-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-addrequestheaders-foo-bar-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-addrequestheaders-foo-bar-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-addrequestheaders-foo-bar-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-addrequestheaders-foo-bar-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-addrequestheaders-foo-bar-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-addrequestheaders-moo-arf-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-addrequestheaders-moo-arf-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-addrequestheaders-moo-arf-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-addrequestheaders-moo-arf-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-addrequestheaders-moo-arf-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-addrequestheaders-xoo-dwe-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-addrequestheaders-xoo-dwe-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-addrequestheaders-xoo-dwe-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-addrequestheaders-xoo-dwe-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-addrequestheaders-xoo-dwe-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-addrequestheaders-zoo-bar-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-addrequestheaders-zoo-bar-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-addrequestheaders-zoo-bar-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-addrequestheaders-zoo-bar-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-addrequestheaders-zoo-bar-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-addresponseheaders-aoo-tyu-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-addresponseheaders-aoo-tyu-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-addresponseheaders-aoo-tyu-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-addresponseheaders-aoo-tyu-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-addresponseheaders-aoo-tyu-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-addresponseheaders-foo-bar-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-addresponseheaders-foo-bar-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-addresponseheaders-foo-bar-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-addresponseheaders-foo-bar-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-addresponseheaders-foo-bar-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-addresponseheaders-moo-arf-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-addresponseheaders-moo-arf-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-addresponseheaders-moo-arf-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-addresponseheaders-moo-arf-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-addresponseheaders-moo-arf-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-addresponseheaders-xoo-dwe-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-addresponseheaders-xoo-dwe-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-addresponseheaders-xoo-dwe-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-addresponseheaders-xoo-dwe-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-addresponseheaders-xoo-dwe-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-addresponseheaders-zoo-bar-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-addresponseheaders-zoo-bar-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-addresponseheaders-zoo-bar-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-addresponseheaders-zoo-bar-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-addresponseheaders-zoo-bar-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-all-http-evil-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-all-http-evil-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-all-http",
            "namespace": "evil-namespace",
            "rkey": "k8s-plain-simplemapping-http-all-http-evil-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-all-http\nnamespace: evil-namespace\n"
        },
        "k8s-plain-simplemapping-http-all-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-all-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-all-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-all-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-all-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-autohostrewrite-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-autohostrewrite-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-autohostrewrite-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-autohostrewrite-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-autohostrewrite-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-casesensitive-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-casesensitive-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-casesensitive-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-casesensitive-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-casesensitive-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-cors-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-cors-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-cors-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-cors-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-cors-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-removeresponseheaders-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-removeresponseheaders-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-removeresponseheaders-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-removeresponseheaders-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-removeresponseheaders-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-rewrite-foo-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-rewrite-foo-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-rewrite-foo-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-rewrite-foo-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-rewrite-foo-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-rewrite-slash-foo-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-rewrite-slash-foo-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-rewrite-slash-foo-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-rewrite-slash-foo-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-rewrite-slash-foo-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemapping-http-usewebsocket-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemapping-http-usewebsocket-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemapping-http-usewebsocket-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemapping-http-usewebsocket-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemapping-http-usewebsocket-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemappingingress-grpc-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemappingingress-grpc-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemappingingress-grpc-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemappingingress-grpc-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemappingingress-grpc-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-simplemappingingress-http-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-simplemappingingress-http-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-simplemappingingress-http-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-simplemappingingress-http-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-simplemappingingress-http-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-tlsorigination-grpc-explicit-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-tlsorigination-grpc-explicit-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-tlsorigination-grpc-explicit-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-tlsorigination-grpc-explicit-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-tlsorigination-grpc-explicit-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-tlsorigination-grpc-implicit-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-tlsorigination-grpc-implicit-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-tlsorigination-grpc-implicit-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-tlsorigination-grpc-implicit-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-tlsorigination-grpc-implicit-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-tlsorigination-http-explicit-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-tlsorigination-http-explicit-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-tlsorigination-http-explicit-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-tlsorigination-http-explicit-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-tlsorigination-http-explicit-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-tlsorigination-http-implicit-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-tlsorigination-http-implicit-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-tlsorigination-http-implicit-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-tlsorigination-http-implicit-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-tlsorigination-http-implicit-http\nnamespace: plain-namespace\n"
        },
        "k8s-plain-websocketmapping-grpc-grpc-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-websocketmapping-grpc-grpc-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-websocketmapping-grpc-grpc",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-websocketmapping-grpc-grpc-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-websocketmapping-grpc-grpc\nnamespace: plain-namespace\n"
        },
        "k8s-plain-websocketmapping-http-http-plain-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-plain-websocketmapping-http-http-plain-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "plain",
                "scope": "AmbassadorTest"
            },
            "name": "plain-websocketmapping-http-http",
            "namespace": "plain-namespace",
            "rkey": "k8s-plain-websocketmapping-http-http-plain-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: plain\n  scope: AmbassadorTest\nname: plain-websocketmapping-http-http\nnamespace: plain-namespace\n"
        },
        "k8s-qotm-knative-testing": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-qotm-knative-testing",
            "name": "qotm",
            "namespace": "knative-testing",
            "rkey": "k8s-qotm-knative-testing",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nname: qotm\nnamespace: knative-testing\n"
        },
        "k8s-qotm-watt-rapid": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-qotm-watt-rapid",
            "name": "qotm",
            "namespace": "watt-rapid",
            "rkey": "k8s-qotm-watt-rapid",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nname: qotm\nnamespace: watt-rapid\n"
        },
        "k8s-queryparameterpresentroutingtest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-queryparameterpresentroutingtest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "queryparameterpresentroutingtest",
                "scope": "AmbassadorTest",
                "service": "queryparameterpresentroutingtest-admin"
            },
            "name": "queryparameterpresentroutingtest-admin",
            "namespace": "default",
            "rkey": "k8s-queryparameterpresentroutingtest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: queryparameterpresentroutingtest\n  scope: AmbassadorTest\n  service: queryparameterpresentroutingtest-admin\nname: queryparameterpresentroutingtest-admin\nnamespace: default\n"
        },
        "k8s-queryparameterpresentroutingtest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-queryparameterpresentroutingtest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "queryparameterpresentroutingtest",
                "scope": "AmbassadorTest"
            },
            "name": "queryparameterpresentroutingtest",
            "namespace": "default",
            "rkey": "k8s-queryparameterpresentroutingtest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: queryparameterpresentroutingtest\n  scope: AmbassadorTest\nname: queryparameterpresentroutingtest\nnamespace: default\n"
        },
        "k8s-queryparameterpresentroutingtest-http-target-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-queryparameterpresentroutingtest-http-target-default",
            "metadata_labels": {
                "kat-ambassador-id": "queryparameterpresentroutingtest",
                "scope": "AmbassadorTest"
            },
            "name": "queryparameterpresentroutingtest-http-target",
            "namespace": "default",
            "rkey": "k8s-queryparameterpresentroutingtest-http-target-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: queryparameterpresentroutingtest\n  scope: AmbassadorTest\nname: queryparameterpresentroutingtest-http-target\nnamespace: default\n"
        },
        "k8s-queryparameterroutingtest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-queryparameterroutingtest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "queryparameterroutingtest",
                "scope": "AmbassadorTest",
                "service": "queryparameterroutingtest-admin"
            },
            "name": "queryparameterroutingtest-admin",
            "namespace": "default",
            "rkey": "k8s-queryparameterroutingtest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: queryparameterroutingtest\n  scope: AmbassadorTest\n  service: queryparameterroutingtest-admin\nname: queryparameterroutingtest-admin\nnamespace: default\n"
        },
        "k8s-queryparameterroutingtest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-queryparameterroutingtest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "queryparameterroutingtest",
                "scope": "AmbassadorTest"
            },
            "name": "queryparameterroutingtest",
            "namespace": "default",
            "rkey": "k8s-queryparameterroutingtest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: queryparameterroutingtest\n  scope: AmbassadorTest\nname: queryparameterroutingtest\nnamespace: default\n"
        },
        "k8s-queryparameterroutingtest-http-target1-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-queryparameterroutingtest-http-target1-default",
            "metadata_labels": {
                "kat-ambassador-id": "queryparameterroutingtest",
                "scope": "AmbassadorTest"
            },
            "name": "queryparameterroutingtest-http-target1",
            "namespace": "default",
            "rkey": "k8s-queryparameterroutingtest-http-target1-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: queryparameterroutingtest\n  scope: AmbassadorTest\nname: queryparameterroutingtest-http-target1\nnamespace: default\n"
        },
        "k8s-queryparameterroutingtest-http-target2-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-queryparameterroutingtest-http-target2-default",
            "metadata_labels": {
                "kat-ambassador-id": "queryparameterroutingtest",
                "scope": "AmbassadorTest"
            },
            "name": "queryparameterroutingtest-http-target2",
            "namespace": "default",
            "rkey": "k8s-queryparameterroutingtest-http-target2-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: queryparameterroutingtest\n  scope: AmbassadorTest\nname: queryparameterroutingtest-http-target2\nnamespace: default\n"
        },
        "k8s-queryparameterroutingwithregextest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-queryparameterroutingwithregextest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "queryparameterroutingwithregextest",
                "scope": "AmbassadorTest",
                "service": "queryparameterroutingwithregextest-admin"
            },
            "name": "queryparameterroutingwithregextest-admin",
            "namespace": "default",
            "rkey": "k8s-queryparameterroutingwithregextest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: queryparameterroutingwithregextest\n  scope: AmbassadorTest\n  service: queryparameterroutingwithregextest-admin\nname: queryparameterroutingwithregextest-admin\nnamespace: default\n"
        },
        "k8s-queryparameterroutingwithregextest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-queryparameterroutingwithregextest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "queryparameterroutingwithregextest",
                "scope": "AmbassadorTest"
            },
            "name": "queryparameterroutingwithregextest",
            "namespace": "default",
            "rkey": "k8s-queryparameterroutingwithregextest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: queryparameterroutingwithregextest\n  scope: AmbassadorTest\nname: queryparameterroutingwithregextest\nnamespace: default\n"
        },
        "k8s-queryparameterroutingwithregextest-http-target-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-queryparameterroutingwithregextest-http-target-default",
            "metadata_labels": {
                "kat-ambassador-id": "queryparameterroutingwithregextest",
                "scope": "AmbassadorTest"
            },
            "name": "queryparameterroutingwithregextest-http-target",
            "namespace": "default",
            "rkey": "k8s-queryparameterroutingwithregextest-http-target-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: queryparameterroutingwithregextest\n  scope: AmbassadorTest\nname: queryparameterroutingwithregextest-http-target\nnamespace: default\n"
        },
        "k8s-rate-limit-tls-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-rate-limit-tls-default",
            "metadata_labels": {
                "kat-ambassador-id": "ratelimitv1withtlstest",
                "scope": "AmbassadorTest"
            },
            "name": "rate-limit-tls",
            "namespace": "default",
            "rkey": "k8s-rate-limit-tls-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: ratelimitv1withtlstest\n  scope: AmbassadorTest\nname: rate-limit-tls\nnamespace: default\n"
        },
        "k8s-rate-limit-v0-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-rate-limit-v0-default",
            "metadata_labels": {
                "kat-ambassador-id": "ratelimitv0test",
                "scope": "AmbassadorTest"
            },
            "name": "rate-limit-v0",
            "namespace": "default",
            "rkey": "k8s-rate-limit-v0-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: ratelimitv0test\n  scope: AmbassadorTest\nname: rate-limit-v0\nnamespace: default\n"
        },
        "k8s-rate-limit-v1-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-rate-limit-v1-default",
            "metadata_labels": {
                "kat-ambassador-id": "ratelimitv1test",
                "scope": "AmbassadorTest"
            },
            "name": "rate-limit-v1",
            "namespace": "default",
            "rkey": "k8s-rate-limit-v1-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: ratelimitv1test\n  scope: AmbassadorTest\nname: rate-limit-v1\nnamespace: default\n"
        },
        "k8s-ratelimitv0test-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ratelimitv0test-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "ratelimitv0test",
                "scope": "AmbassadorTest",
                "service": "ratelimitv0test-admin"
            },
            "name": "ratelimitv0test-admin",
            "namespace": "default",
            "rkey": "k8s-ratelimitv0test-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: ratelimitv0test\n  scope: AmbassadorTest\n  service: ratelimitv0test-admin\nname: ratelimitv0test-admin\nnamespace: default\n"
        },
        "k8s-ratelimitv0test-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ratelimitv0test-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "ratelimitv0test",
                "scope": "AmbassadorTest"
            },
            "name": "ratelimitv0test",
            "namespace": "default",
            "rkey": "k8s-ratelimitv0test-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: ratelimitv0test\n  scope: AmbassadorTest\nname: ratelimitv0test\nnamespace: default\n"
        },
        "k8s-ratelimitv0test-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ratelimitv0test-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "ratelimitv0test",
                "scope": "AmbassadorTest"
            },
            "name": "ratelimitv0test-http",
            "namespace": "default",
            "rkey": "k8s-ratelimitv0test-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: ratelimitv0test\n  scope: AmbassadorTest\nname: ratelimitv0test-http\nnamespace: default\n"
        },
        "k8s-ratelimitv1test-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ratelimitv1test-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "ratelimitv1test",
                "scope": "AmbassadorTest",
                "service": "ratelimitv1test-admin"
            },
            "name": "ratelimitv1test-admin",
            "namespace": "default",
            "rkey": "k8s-ratelimitv1test-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: ratelimitv1test\n  scope: AmbassadorTest\n  service: ratelimitv1test-admin\nname: ratelimitv1test-admin\nnamespace: default\n"
        },
        "k8s-ratelimitv1test-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ratelimitv1test-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "ratelimitv1test",
                "scope": "AmbassadorTest"
            },
            "name": "ratelimitv1test",
            "namespace": "default",
            "rkey": "k8s-ratelimitv1test-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: ratelimitv1test\n  scope: AmbassadorTest\nname: ratelimitv1test\nnamespace: default\n"
        },
        "k8s-ratelimitv1test-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ratelimitv1test-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "ratelimitv1test",
                "scope": "AmbassadorTest"
            },
            "name": "ratelimitv1test-http",
            "namespace": "default",
            "rkey": "k8s-ratelimitv1test-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: ratelimitv1test\n  scope: AmbassadorTest\nname: ratelimitv1test-http\nnamespace: default\n"
        },
        "k8s-ratelimitv1withtlstest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ratelimitv1withtlstest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "ratelimitv1withtlstest",
                "scope": "AmbassadorTest",
                "service": "ratelimitv1withtlstest-admin"
            },
            "name": "ratelimitv1withtlstest-admin",
            "namespace": "default",
            "rkey": "k8s-ratelimitv1withtlstest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: ratelimitv1withtlstest\n  scope: AmbassadorTest\n  service: ratelimitv1withtlstest-admin\nname: ratelimitv1withtlstest-admin\nnamespace: default\n"
        },
        "k8s-ratelimitv1withtlstest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ratelimitv1withtlstest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "ratelimitv1withtlstest",
                "scope": "AmbassadorTest"
            },
            "name": "ratelimitv1withtlstest",
            "namespace": "default",
            "rkey": "k8s-ratelimitv1withtlstest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: ratelimitv1withtlstest\n  scope: AmbassadorTest\nname: ratelimitv1withtlstest\nnamespace: default\n"
        },
        "k8s-ratelimitv1withtlstest-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-ratelimitv1withtlstest-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "ratelimitv1withtlstest",
                "scope": "AmbassadorTest"
            },
            "name": "ratelimitv1withtlstest-http",
            "namespace": "default",
            "rkey": "k8s-ratelimitv1withtlstest-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: ratelimitv1withtlstest\n  scope: AmbassadorTest\nname: ratelimitv1withtlstest-http\nnamespace: default\n"
        },
        "k8s-redirecttests-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-redirecttests-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "redirecttests",
                "scope": "AmbassadorTest",
                "service": "redirecttests-admin"
            },
            "name": "redirecttests-admin",
            "namespace": "default",
            "rkey": "k8s-redirecttests-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: redirecttests\n  scope: AmbassadorTest\n  service: redirecttests-admin\nname: redirecttests-admin\nnamespace: default\n"
        },
        "k8s-redirecttests-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-redirecttests-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "redirecttests",
                "scope": "AmbassadorTest"
            },
            "name": "redirecttests",
            "namespace": "default",
            "rkey": "k8s-redirecttests-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: redirecttests\n  scope: AmbassadorTest\nname: redirecttests\nnamespace: default\n"
        },
        "k8s-redirecttests-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-redirecttests-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "redirecttests",
                "scope": "AmbassadorTest"
            },
            "name": "redirecttests-http",
            "namespace": "default",
            "rkey": "k8s-redirecttests-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: redirecttests\n  scope: AmbassadorTest\nname: redirecttests-http\nnamespace: default\n"
        },
        "k8s-redirecttestsinvalidsecret-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-redirecttestsinvalidsecret-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "redirecttestsinvalidsecret",
                "scope": "AmbassadorTest",
                "service": "redirecttestsinvalidsecret-admin"
            },
            "name": "redirecttestsinvalidsecret-admin",
            "namespace": "default",
            "rkey": "k8s-redirecttestsinvalidsecret-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: redirecttestsinvalidsecret\n  scope: AmbassadorTest\n  service: redirecttestsinvalidsecret-admin\nname: redirecttestsinvalidsecret-admin\nnamespace: default\n"
        },
        "k8s-redirecttestsinvalidsecret-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-redirecttestsinvalidsecret-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "redirecttestsinvalidsecret",
                "scope": "AmbassadorTest"
            },
            "name": "redirecttestsinvalidsecret",
            "namespace": "default",
            "rkey": "k8s-redirecttestsinvalidsecret-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: redirecttestsinvalidsecret\n  scope: AmbassadorTest\nname: redirecttestsinvalidsecret\nnamespace: default\n"
        },
        "k8s-redirecttestsinvalidsecret-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-redirecttestsinvalidsecret-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "redirecttestsinvalidsecret",
                "scope": "AmbassadorTest"
            },
            "name": "redirecttestsinvalidsecret-http",
            "namespace": "default",
            "rkey": "k8s-redirecttestsinvalidsecret-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: redirecttestsinvalidsecret\n  scope: AmbassadorTest\nname: redirecttestsinvalidsecret-http\nnamespace: default\n"
        },
        "k8s-redirecttestswithproxyproto-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-redirecttestswithproxyproto-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "redirecttestswithproxyproto",
                "scope": "AmbassadorTest",
                "service": "redirecttestswithproxyproto-admin"
            },
            "name": "redirecttestswithproxyproto-admin",
            "namespace": "default",
            "rkey": "k8s-redirecttestswithproxyproto-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: redirecttestswithproxyproto\n  scope: AmbassadorTest\n  service: redirecttestswithproxyproto-admin\nname: redirecttestswithproxyproto-admin\nnamespace: default\n"
        },
        "k8s-redirecttestswithproxyproto-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-redirecttestswithproxyproto-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "redirecttestswithproxyproto",
                "scope": "AmbassadorTest"
            },
            "name": "redirecttestswithproxyproto",
            "namespace": "default",
            "rkey": "k8s-redirecttestswithproxyproto-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: redirecttestswithproxyproto\n  scope: AmbassadorTest\nname: redirecttestswithproxyproto\nnamespace: default\n"
        },
        "k8s-redirecttestswithproxyproto-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-redirecttestswithproxyproto-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "redirecttestswithproxyproto",
                "scope": "AmbassadorTest"
            },
            "name": "redirecttestswithproxyproto-http",
            "namespace": "default",
            "rkey": "k8s-redirecttestswithproxyproto-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: redirecttestswithproxyproto\n  scope: AmbassadorTest\nname: redirecttestswithproxyproto-http\nnamespace: default\n"
        },
        "k8s-regexrewriteforwardingtest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-regexrewriteforwardingtest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "regexrewriteforwardingtest",
                "scope": "AmbassadorTest",
                "service": "regexrewriteforwardingtest-admin"
            },
            "name": "regexrewriteforwardingtest-admin",
            "namespace": "default",
            "rkey": "k8s-regexrewriteforwardingtest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: regexrewriteforwardingtest\n  scope: AmbassadorTest\n  service: regexrewriteforwardingtest-admin\nname: regexrewriteforwardingtest-admin\nnamespace: default\n"
        },
        "k8s-regexrewriteforwardingtest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-regexrewriteforwardingtest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "regexrewriteforwardingtest",
                "scope": "AmbassadorTest"
            },
            "name": "regexrewriteforwardingtest",
            "namespace": "default",
            "rkey": "k8s-regexrewriteforwardingtest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: regexrewriteforwardingtest\n  scope: AmbassadorTest\nname: regexrewriteforwardingtest\nnamespace: default\n"
        },
        "k8s-regexrewriteforwardingtest-http-foo-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-regexrewriteforwardingtest-http-foo-default",
            "metadata_labels": {
                "kat-ambassador-id": "regexrewriteforwardingtest",
                "scope": "AmbassadorTest"
            },
            "name": "regexrewriteforwardingtest-http-foo",
            "namespace": "default",
            "rkey": "k8s-regexrewriteforwardingtest-http-foo-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: regexrewriteforwardingtest\n  scope: AmbassadorTest\nname: regexrewriteforwardingtest-http-foo\nnamespace: default\n"
        },
        "k8s-regexrewriteforwardingwithextractandsubstitutetest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-regexrewriteforwardingwithextractandsubstitutetest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "regexrewriteforwardingwithextractandsubstitutetest",
                "scope": "AmbassadorTest",
                "service": "regexrewriteforwardingwithextractandsubstitutetest-admin"
            },
            "name": "regexrewriteforwardingwithextractandsubstitutetest-admin",
            "namespace": "default",
            "rkey": "k8s-regexrewriteforwardingwithextractandsubstitutetest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: regexrewriteforwardingwithextractandsubstitutetest\n  scope: AmbassadorTest\n  service: regexrewriteforwardingwithextractandsubstitutetest-admin\nname: regexrewriteforwardingwithextractandsubstitutetest-admin\nnamespace: default\n"
        },
        "k8s-regexrewriteforwardingwithextractandsubstitutetest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-regexrewriteforwardingwithextractandsubstitutetest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "regexrewriteforwardingwithextractandsubstitutetest",
                "scope": "AmbassadorTest"
            },
            "name": "regexrewriteforwardingwithextractandsubstitutetest",
            "namespace": "default",
            "rkey": "k8s-regexrewriteforwardingwithextractandsubstitutetest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: regexrewriteforwardingwithextractandsubstitutetest\n  scope: AmbassadorTest\nname: regexrewriteforwardingwithextractandsubstitutetest\nnamespace: default\n"
        },
        "k8s-regexrewriteforwardingwithextractandsubstitutetest-http-foo-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-regexrewriteforwardingwithextractandsubstitutetest-http-foo-default",
            "metadata_labels": {
                "kat-ambassador-id": "regexrewriteforwardingwithextractandsubstitutetest",
                "scope": "AmbassadorTest"
            },
            "name": "regexrewriteforwardingwithextractandsubstitutetest-http-foo",
            "namespace": "default",
            "rkey": "k8s-regexrewriteforwardingwithextractandsubstitutetest-http-foo-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: regexrewriteforwardingwithextractandsubstitutetest\n  scope: AmbassadorTest\nname: regexrewriteforwardingwithextractandsubstitutetest-http-foo\nnamespace: default\n"
        },
        "k8s-retrypolicytest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-retrypolicytest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "retrypolicytest",
                "scope": "AmbassadorTest",
                "service": "retrypolicytest-admin"
            },
            "name": "retrypolicytest-admin",
            "namespace": "default",
            "rkey": "k8s-retrypolicytest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: retrypolicytest\n  scope: AmbassadorTest\n  service: retrypolicytest-admin\nname: retrypolicytest-admin\nnamespace: default\n"
        },
        "k8s-retrypolicytest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-retrypolicytest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "retrypolicytest",
                "scope": "AmbassadorTest"
            },
            "name": "retrypolicytest",
            "namespace": "default",
            "rkey": "k8s-retrypolicytest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: retrypolicytest\n  scope: AmbassadorTest\nname: retrypolicytest\nnamespace: default\n"
        },
        "k8s-retrypolicytest-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-retrypolicytest-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "retrypolicytest",
                "scope": "AmbassadorTest"
            },
            "name": "retrypolicytest-http",
            "namespace": "default",
            "rkey": "k8s-retrypolicytest-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: retrypolicytest\n  scope: AmbassadorTest\nname: retrypolicytest-http\nnamespace: default\n"
        },
        "k8s-saferegexmapping-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-saferegexmapping-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "saferegexmapping",
                "scope": "AmbassadorTest",
                "service": "saferegexmapping-admin"
            },
            "name": "saferegexmapping-admin",
            "namespace": "default",
            "rkey": "k8s-saferegexmapping-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: saferegexmapping\n  scope: AmbassadorTest\n  service: saferegexmapping-admin\nname: saferegexmapping-admin\nnamespace: default\n"
        },
        "k8s-saferegexmapping-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-saferegexmapping-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "saferegexmapping",
                "scope": "AmbassadorTest"
            },
            "name": "saferegexmapping",
            "namespace": "default",
            "rkey": "k8s-saferegexmapping-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: saferegexmapping\n  scope: AmbassadorTest\nname: saferegexmapping\nnamespace: default\n"
        },
        "k8s-saferegexmapping-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-saferegexmapping-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "saferegexmapping",
                "scope": "AmbassadorTest"
            },
            "name": "saferegexmapping-http",
            "namespace": "default",
            "rkey": "k8s-saferegexmapping-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: saferegexmapping\n  scope: AmbassadorTest\nname: saferegexmapping-http\nnamespace: default\n"
        },
        "k8s-sameingressmultiplenamespaces-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-sameingressmultiplenamespaces-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "sameingressmultiplenamespaces",
                "scope": "AmbassadorTest",
                "service": "sameingressmultiplenamespaces-admin"
            },
            "name": "sameingressmultiplenamespaces-admin",
            "namespace": "default",
            "rkey": "k8s-sameingressmultiplenamespaces-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: sameingressmultiplenamespaces\n  scope: AmbassadorTest\n  service: sameingressmultiplenamespaces-admin\nname: sameingressmultiplenamespaces-admin\nnamespace: default\n"
        },
        "k8s-sameingressmultiplenamespaces-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-sameingressmultiplenamespaces-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "sameingressmultiplenamespaces",
                "scope": "AmbassadorTest"
            },
            "name": "sameingressmultiplenamespaces",
            "namespace": "default",
            "rkey": "k8s-sameingressmultiplenamespaces-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: sameingressmultiplenamespaces\n  scope: AmbassadorTest\nname: sameingressmultiplenamespaces\nnamespace: default\n"
        },
        "k8s-sameingressmultiplenamespaces-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-sameingressmultiplenamespaces-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "sameingressmultiplenamespaces",
                "scope": "AmbassadorTest"
            },
            "name": "sameingressmultiplenamespaces-http",
            "namespace": "default",
            "rkey": "k8s-sameingressmultiplenamespaces-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: sameingressmultiplenamespaces\n  scope: AmbassadorTest\nname: sameingressmultiplenamespaces-http\nnamespace: default\n"
        },
        "k8s-sameingressmultiplenamespaces-http-target1-same-ingress-1": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-sameingressmultiplenamespaces-http-target1-same-ingress-1",
            "metadata_labels": {
                "kat-ambassador-id": "sameingressmultiplenamespaces",
                "scope": "AmbassadorTest"
            },
            "name": "sameingressmultiplenamespaces-http-target1",
            "namespace": "same-ingress-1",
            "rkey": "k8s-sameingressmultiplenamespaces-http-target1-same-ingress-1",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: sameingressmultiplenamespaces\n  scope: AmbassadorTest\nname: sameingressmultiplenamespaces-http-target1\nnamespace: same-ingress-1\n"
        },
        "k8s-sameingressmultiplenamespaces-http-target2-same-ingress-2": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-sameingressmultiplenamespaces-http-target2-same-ingress-2",
            "metadata_labels": {
                "kat-ambassador-id": "sameingressmultiplenamespaces",
                "scope": "AmbassadorTest"
            },
            "name": "sameingressmultiplenamespaces-http-target2",
            "namespace": "same-ingress-2",
            "rkey": "k8s-sameingressmultiplenamespaces-http-target2-same-ingress-2",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: sameingressmultiplenamespaces\n  scope: AmbassadorTest\nname: sameingressmultiplenamespaces-http-target2\nnamespace: same-ingress-2\n"
        },
        "k8s-samemappingdifferentnamespaces-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-samemappingdifferentnamespaces-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "samemappingdifferentnamespaces",
                "scope": "AmbassadorTest",
                "service": "samemappingdifferentnamespaces-admin"
            },
            "name": "samemappingdifferentnamespaces-admin",
            "namespace": "default",
            "rkey": "k8s-samemappingdifferentnamespaces-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: samemappingdifferentnamespaces\n  scope: AmbassadorTest\n  service: samemappingdifferentnamespaces-admin\nname: samemappingdifferentnamespaces-admin\nnamespace: default\n"
        },
        "k8s-samemappingdifferentnamespaces-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-samemappingdifferentnamespaces-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "samemappingdifferentnamespaces",
                "scope": "AmbassadorTest"
            },
            "name": "samemappingdifferentnamespaces",
            "namespace": "default",
            "rkey": "k8s-samemappingdifferentnamespaces-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: samemappingdifferentnamespaces\n  scope: AmbassadorTest\nname: samemappingdifferentnamespaces\nnamespace: default\n"
        },
        "k8s-samemappingdifferentnamespaces-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-samemappingdifferentnamespaces-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "samemappingdifferentnamespaces",
                "scope": "AmbassadorTest"
            },
            "name": "samemappingdifferentnamespaces-http",
            "namespace": "default",
            "rkey": "k8s-samemappingdifferentnamespaces-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: samemappingdifferentnamespaces\n  scope: AmbassadorTest\nname: samemappingdifferentnamespaces-http\nnamespace: default\n"
        },
        "k8s-servernametest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-servernametest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "servernametest",
                "scope": "AmbassadorTest",
                "service": "servernametest-admin"
            },
            "name": "servernametest-admin",
            "namespace": "default",
            "rkey": "k8s-servernametest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: servernametest\n  scope: AmbassadorTest\n  service: servernametest-admin\nname: servernametest-admin\nnamespace: default\n"
        },
        "k8s-servernametest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-servernametest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "servernametest",
                "scope": "AmbassadorTest"
            },
            "name": "servernametest",
            "namespace": "default",
            "rkey": "k8s-servernametest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: servernametest\n  scope: AmbassadorTest\nname: servernametest\nnamespace: default\n"
        },
        "k8s-servernametest-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-servernametest-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "servernametest",
                "scope": "AmbassadorTest"
            },
            "name": "servernametest-http",
            "namespace": "default",
            "rkey": "k8s-servernametest-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: servernametest\n  scope: AmbassadorTest\nname: servernametest-http\nnamespace: default\n"
        },
        "k8s-stenography-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-stenography-default",
            "metadata_labels": {
                "kat-ambassador-id": "logservicetest",
                "scope": "AmbassadorTest"
            },
            "name": "stenography",
            "namespace": "default",
            "rkey": "k8s-stenography-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: logservicetest\n  scope: AmbassadorTest\nname: stenography\nnamespace: default\n"
        },
        "k8s-tcpmappingtest-admin-tcp-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tcpmappingtest-admin-tcp-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "tcpmappingtest",
                "scope": "AmbassadorTest",
                "service": "tcpmappingtest-admin"
            },
            "name": "tcpmappingtest-admin",
            "namespace": "tcp-namespace",
            "rkey": "k8s-tcpmappingtest-admin-tcp-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tcpmappingtest\n  scope: AmbassadorTest\n  service: tcpmappingtest-admin\nname: tcpmappingtest-admin\nnamespace: tcp-namespace\n"
        },
        "k8s-tcpmappingtest-http-target1-tcp-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tcpmappingtest-http-target1-tcp-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "tcpmappingtest",
                "scope": "AmbassadorTest"
            },
            "name": "tcpmappingtest-http-target1",
            "namespace": "tcp-namespace",
            "rkey": "k8s-tcpmappingtest-http-target1-tcp-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tcpmappingtest\n  scope: AmbassadorTest\nname: tcpmappingtest-http-target1\nnamespace: tcp-namespace\n"
        },
        "k8s-tcpmappingtest-http-target2-other-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tcpmappingtest-http-target2-other-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "tcpmappingtest",
                "scope": "AmbassadorTest"
            },
            "name": "tcpmappingtest-http-target2",
            "namespace": "other-namespace",
            "rkey": "k8s-tcpmappingtest-http-target2-other-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tcpmappingtest\n  scope: AmbassadorTest\nname: tcpmappingtest-http-target2\nnamespace: other-namespace\n"
        },
        "k8s-tcpmappingtest-http-target3-tcp-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tcpmappingtest-http-target3-tcp-namespace",
            "metadata_labels": {
                "kat-ambassador-id": "tcpmappingtest",
                "scope": "AmbassadorTest"
            },
            "name": "tcpmappingtest-http-target3",
            "namespace": "tcp-namespace",
            "rkey": "k8s-tcpmappingtest-http-target3-tcp-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tcpmappingtest\n  scope: AmbassadorTest\nname: tcpmappingtest-http-target3\nnamespace: tcp-namespace\n"
        },
        "k8s-tcpmappingtest-tcp-namespace": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tcpmappingtest-tcp-namespace",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "tcpmappingtest",
                "scope": "AmbassadorTest"
            },
            "name": "tcpmappingtest",
            "namespace": "tcp-namespace",
            "rkey": "k8s-tcpmappingtest-tcp-namespace",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: tcpmappingtest\n  scope: AmbassadorTest\nname: tcpmappingtest\nnamespace: tcp-namespace\n"
        },
        "k8s-tls-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tls-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "tls",
                "scope": "AmbassadorTest",
                "service": "tls-admin"
            },
            "name": "tls-admin",
            "namespace": "default",
            "rkey": "k8s-tls-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tls\n  scope: AmbassadorTest\n  service: tls-admin\nname: tls-admin\nnamespace: default\n"
        },
        "k8s-tls-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tls-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "tls",
                "scope": "AmbassadorTest"
            },
            "name": "tls",
            "namespace": "default",
            "rkey": "k8s-tls-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: tls\n  scope: AmbassadorTest\nname: tls\nnamespace: default\n"
        },
        "k8s-tls-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tls-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "tls",
                "scope": "AmbassadorTest"
            },
            "name": "tls-http",
            "namespace": "default",
            "rkey": "k8s-tls-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tls\n  scope: AmbassadorTest\nname: tls-http\nnamespace: default\n"
        },
        "k8s-tlscoalescing-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlscoalescing-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "tlscoalescing",
                "scope": "AmbassadorTest",
                "service": "tlscoalescing-admin"
            },
            "name": "tlscoalescing-admin",
            "namespace": "default",
            "rkey": "k8s-tlscoalescing-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tlscoalescing\n  scope: AmbassadorTest\n  service: tlscoalescing-admin\nname: tlscoalescing-admin\nnamespace: default\n"
        },
        "k8s-tlscoalescing-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlscoalescing-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "tlscoalescing",
                "scope": "AmbassadorTest"
            },
            "name": "tlscoalescing",
            "namespace": "default",
            "rkey": "k8s-tlscoalescing-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: tlscoalescing\n  scope: AmbassadorTest\nname: tlscoalescing\nnamespace: default\n"
        },
        "k8s-tlscoalescing-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlscoalescing-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "tlscoalescing",
                "scope": "AmbassadorTest"
            },
            "name": "tlscoalescing-http",
            "namespace": "default",
            "rkey": "k8s-tlscoalescing-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tlscoalescing\n  scope: AmbassadorTest\nname: tlscoalescing-http\nnamespace: default\n"
        },
        "k8s-tlscontextciphersuites-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlscontextciphersuites-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "tlscontextciphersuites",
                "scope": "AmbassadorTest",
                "service": "tlscontextciphersuites-admin"
            },
            "name": "tlscontextciphersuites-admin",
            "namespace": "default",
            "rkey": "k8s-tlscontextciphersuites-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tlscontextciphersuites\n  scope: AmbassadorTest\n  service: tlscontextciphersuites-admin\nname: tlscontextciphersuites-admin\nnamespace: default\n"
        },
        "k8s-tlscontextciphersuites-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlscontextciphersuites-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "tlscontextciphersuites",
                "scope": "AmbassadorTest"
            },
            "name": "tlscontextciphersuites",
            "namespace": "default",
            "rkey": "k8s-tlscontextciphersuites-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: tlscontextciphersuites\n  scope: AmbassadorTest\nname: tlscontextciphersuites\nnamespace: default\n"
        },
        "k8s-tlscontextciphersuites-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlscontextciphersuites-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "tlscontextciphersuites",
                "scope": "AmbassadorTest"
            },
            "name": "tlscontextciphersuites-http",
            "namespace": "default",
            "rkey": "k8s-tlscontextciphersuites-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tlscontextciphersuites\n  scope: AmbassadorTest\nname: tlscontextciphersuites-http\nnamespace: default\n"
        },
        "k8s-tlscontextistiosecrettest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlscontextistiosecrettest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "tlscontextistiosecrettest",
                "scope": "AmbassadorTest",
                "service": "tlscontextistiosecrettest-admin"
            },
            "name": "tlscontextistiosecrettest-admin",
            "namespace": "default",
            "rkey": "k8s-tlscontextistiosecrettest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tlscontextistiosecrettest\n  scope: AmbassadorTest\n  service: tlscontextistiosecrettest-admin\nname: tlscontextistiosecrettest-admin\nnamespace: default\n"
        },
        "k8s-tlscontextistiosecrettest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlscontextistiosecrettest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "tlscontextistiosecrettest",
                "scope": "AmbassadorTest"
            },
            "name": "tlscontextistiosecrettest",
            "namespace": "default",
            "rkey": "k8s-tlscontextistiosecrettest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: tlscontextistiosecrettest\n  scope: AmbassadorTest\nname: tlscontextistiosecrettest\nnamespace: default\n"
        },
        "k8s-tlscontextistiosecrettest-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlscontextistiosecrettest-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "tlscontextistiosecrettest",
                "scope": "AmbassadorTest"
            },
            "name": "tlscontextistiosecrettest-http",
            "namespace": "default",
            "rkey": "k8s-tlscontextistiosecrettest-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tlscontextistiosecrettest\n  scope: AmbassadorTest\nname: tlscontextistiosecrettest-http\nnamespace: default\n"
        },
        "k8s-tlscontextprotocolmaxversion-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlscontextprotocolmaxversion-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "tlscontextprotocolmaxversion",
                "scope": "AmbassadorTest",
                "service": "tlscontextprotocolmaxversion-admin"
            },
            "name": "tlscontextprotocolmaxversion-admin",
            "namespace": "default",
            "rkey": "k8s-tlscontextprotocolmaxversion-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tlscontextprotocolmaxversion\n  scope: AmbassadorTest\n  service: tlscontextprotocolmaxversion-admin\nname: tlscontextprotocolmaxversion-admin\nnamespace: default\n"
        },
        "k8s-tlscontextprotocolmaxversion-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlscontextprotocolmaxversion-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "tlscontextprotocolmaxversion",
                "scope": "AmbassadorTest"
            },
            "name": "tlscontextprotocolmaxversion",
            "namespace": "default",
            "rkey": "k8s-tlscontextprotocolmaxversion-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: tlscontextprotocolmaxversion\n  scope: AmbassadorTest\nname: tlscontextprotocolmaxversion\nnamespace: default\n"
        },
        "k8s-tlscontextprotocolmaxversion-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlscontextprotocolmaxversion-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "tlscontextprotocolmaxversion",
                "scope": "AmbassadorTest"
            },
            "name": "tlscontextprotocolmaxversion-http",
            "namespace": "default",
            "rkey": "k8s-tlscontextprotocolmaxversion-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tlscontextprotocolmaxversion\n  scope: AmbassadorTest\nname: tlscontextprotocolmaxversion-http\nnamespace: default\n"
        },
        "k8s-tlscontextprotocolminversion-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlscontextprotocolminversion-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "tlscontextprotocolminversion",
                "scope": "AmbassadorTest",
                "service": "tlscontextprotocolminversion-admin"
            },
            "name": "tlscontextprotocolminversion-admin",
            "namespace": "default",
            "rkey": "k8s-tlscontextprotocolminversion-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tlscontextprotocolminversion\n  scope: AmbassadorTest\n  service: tlscontextprotocolminversion-admin\nname: tlscontextprotocolminversion-admin\nnamespace: default\n"
        },
        "k8s-tlscontextprotocolminversion-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlscontextprotocolminversion-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "tlscontextprotocolminversion",
                "scope": "AmbassadorTest"
            },
            "name": "tlscontextprotocolminversion",
            "namespace": "default",
            "rkey": "k8s-tlscontextprotocolminversion-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: tlscontextprotocolminversion\n  scope: AmbassadorTest\nname: tlscontextprotocolminversion\nnamespace: default\n"
        },
        "k8s-tlscontextprotocolminversion-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlscontextprotocolminversion-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "tlscontextprotocolminversion",
                "scope": "AmbassadorTest"
            },
            "name": "tlscontextprotocolminversion-http",
            "namespace": "default",
            "rkey": "k8s-tlscontextprotocolminversion-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tlscontextprotocolminversion\n  scope: AmbassadorTest\nname: tlscontextprotocolminversion-http\nnamespace: default\n"
        },
        "k8s-tlscontextstest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlscontextstest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "tlscontextstest",
                "scope": "AmbassadorTest",
                "service": "tlscontextstest-admin"
            },
            "name": "tlscontextstest-admin",
            "namespace": "default",
            "rkey": "k8s-tlscontextstest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tlscontextstest\n  scope: AmbassadorTest\n  service: tlscontextstest-admin\nname: tlscontextstest-admin\nnamespace: default\n"
        },
        "k8s-tlscontextstest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlscontextstest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "tlscontextstest",
                "scope": "AmbassadorTest"
            },
            "name": "tlscontextstest",
            "namespace": "default",
            "rkey": "k8s-tlscontextstest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: tlscontextstest\n  scope: AmbassadorTest\nname: tlscontextstest\nnamespace: default\n"
        },
        "k8s-tlscontextstest-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlscontextstest-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "tlscontextstest",
                "scope": "AmbassadorTest"
            },
            "name": "tlscontextstest-http",
            "namespace": "default",
            "rkey": "k8s-tlscontextstest-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tlscontextstest\n  scope: AmbassadorTest\nname: tlscontextstest-http\nnamespace: default\n"
        },
        "k8s-tlscontexttest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlscontexttest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "tlscontexttest",
                "scope": "AmbassadorTest",
                "service": "tlscontexttest-admin"
            },
            "name": "tlscontexttest-admin",
            "namespace": "default",
            "rkey": "k8s-tlscontexttest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tlscontexttest\n  scope: AmbassadorTest\n  service: tlscontexttest-admin\nname: tlscontexttest-admin\nnamespace: default\n"
        },
        "k8s-tlscontexttest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlscontexttest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "tlscontexttest",
                "scope": "AmbassadorTest"
            },
            "name": "tlscontexttest",
            "namespace": "default",
            "rkey": "k8s-tlscontexttest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: tlscontexttest\n  scope: AmbassadorTest\nname: tlscontexttest\nnamespace: default\n"
        },
        "k8s-tlscontexttest-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlscontexttest-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "tlscontexttest",
                "scope": "AmbassadorTest"
            },
            "name": "tlscontexttest-http",
            "namespace": "default",
            "rkey": "k8s-tlscontexttest-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tlscontexttest\n  scope: AmbassadorTest\nname: tlscontexttest-http\nnamespace: default\n"
        },
        "k8s-tlsingresstest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlsingresstest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "tlsingresstest",
                "scope": "AmbassadorTest",
                "service": "tlsingresstest-admin"
            },
            "name": "tlsingresstest-admin",
            "namespace": "default",
            "rkey": "k8s-tlsingresstest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tlsingresstest\n  scope: AmbassadorTest\n  service: tlsingresstest-admin\nname: tlsingresstest-admin\nnamespace: default\n"
        },
        "k8s-tlsingresstest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlsingresstest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "tlsingresstest",
                "scope": "AmbassadorTest"
            },
            "name": "tlsingresstest",
            "namespace": "default",
            "rkey": "k8s-tlsingresstest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: tlsingresstest\n  scope: AmbassadorTest\nname: tlsingresstest\nnamespace: default\n"
        },
        "k8s-tlsingresstest-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlsingresstest-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "tlsingresstest",
                "scope": "AmbassadorTest"
            },
            "name": "tlsingresstest-http",
            "namespace": "default",
            "rkey": "k8s-tlsingresstest-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tlsingresstest\n  scope: AmbassadorTest\nname: tlsingresstest-http\nnamespace: default\n"
        },
        "k8s-tlsinvalidsecret-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlsinvalidsecret-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "tlsinvalidsecret",
                "scope": "AmbassadorTest",
                "service": "tlsinvalidsecret-admin"
            },
            "name": "tlsinvalidsecret-admin",
            "namespace": "default",
            "rkey": "k8s-tlsinvalidsecret-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tlsinvalidsecret\n  scope: AmbassadorTest\n  service: tlsinvalidsecret-admin\nname: tlsinvalidsecret-admin\nnamespace: default\n"
        },
        "k8s-tlsinvalidsecret-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlsinvalidsecret-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "tlsinvalidsecret",
                "scope": "AmbassadorTest"
            },
            "name": "tlsinvalidsecret",
            "namespace": "default",
            "rkey": "k8s-tlsinvalidsecret-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: tlsinvalidsecret\n  scope: AmbassadorTest\nname: tlsinvalidsecret\nnamespace: default\n"
        },
        "k8s-tlsinvalidsecret-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlsinvalidsecret-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "tlsinvalidsecret",
                "scope": "AmbassadorTest"
            },
            "name": "tlsinvalidsecret-http",
            "namespace": "default",
            "rkey": "k8s-tlsinvalidsecret-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tlsinvalidsecret\n  scope: AmbassadorTest\nname: tlsinvalidsecret-http\nnamespace: default\n"
        },
        "k8s-tlsoriginationsecret-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlsoriginationsecret-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "tlsoriginationsecret",
                "scope": "AmbassadorTest",
                "service": "tlsoriginationsecret-admin"
            },
            "name": "tlsoriginationsecret-admin",
            "namespace": "default",
            "rkey": "k8s-tlsoriginationsecret-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tlsoriginationsecret\n  scope: AmbassadorTest\n  service: tlsoriginationsecret-admin\nname: tlsoriginationsecret-admin\nnamespace: default\n"
        },
        "k8s-tlsoriginationsecret-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlsoriginationsecret-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "tlsoriginationsecret",
                "scope": "AmbassadorTest"
            },
            "name": "tlsoriginationsecret",
            "namespace": "default",
            "rkey": "k8s-tlsoriginationsecret-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: tlsoriginationsecret\n  scope: AmbassadorTest\nname: tlsoriginationsecret\nnamespace: default\n"
        },
        "k8s-tlsoriginationsecret-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tlsoriginationsecret-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "tlsoriginationsecret",
                "scope": "AmbassadorTest"
            },
            "name": "tlsoriginationsecret-http",
            "namespace": "default",
            "rkey": "k8s-tlsoriginationsecret-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tlsoriginationsecret\n  scope: AmbassadorTest\nname: tlsoriginationsecret-http\nnamespace: default\n"
        },
        "k8s-tracingexternalauthtest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tracingexternalauthtest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "tracingexternalauthtest",
                "scope": "AmbassadorTest",
                "service": "tracingexternalauthtest-admin"
            },
            "name": "tracingexternalauthtest-admin",
            "namespace": "default",
            "rkey": "k8s-tracingexternalauthtest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tracingexternalauthtest\n  scope: AmbassadorTest\n  service: tracingexternalauthtest-admin\nname: tracingexternalauthtest-admin\nnamespace: default\n"
        },
        "k8s-tracingexternalauthtest-ahttp-auth-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tracingexternalauthtest-ahttp-auth-default",
            "metadata_labels": {
                "kat-ambassador-id": "tracingexternalauthtest",
                "scope": "AmbassadorTest"
            },
            "name": "tracingexternalauthtest-ahttp-auth",
            "namespace": "default",
            "rkey": "k8s-tracingexternalauthtest-ahttp-auth-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tracingexternalauthtest\n  scope: AmbassadorTest\nname: tracingexternalauthtest-ahttp-auth\nnamespace: default\n"
        },
        "k8s-tracingexternalauthtest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tracingexternalauthtest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "tracingexternalauthtest",
                "scope": "AmbassadorTest"
            },
            "name": "tracingexternalauthtest",
            "namespace": "default",
            "rkey": "k8s-tracingexternalauthtest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: tracingexternalauthtest\n  scope: AmbassadorTest\nname: tracingexternalauthtest\nnamespace: default\n"
        },
        "k8s-tracingexternalauthtest-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tracingexternalauthtest-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "tracingexternalauthtest",
                "scope": "AmbassadorTest"
            },
            "name": "tracingexternalauthtest-http",
            "namespace": "default",
            "rkey": "k8s-tracingexternalauthtest-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tracingexternalauthtest\n  scope: AmbassadorTest\nname: tracingexternalauthtest-http\nnamespace: default\n"
        },
        "k8s-tracingtest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tracingtest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "tracingtest",
                "scope": "AmbassadorTest",
                "service": "tracingtest-admin"
            },
            "name": "tracingtest-admin",
            "namespace": "default",
            "rkey": "k8s-tracingtest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tracingtest\n  scope: AmbassadorTest\n  service: tracingtest-admin\nname: tracingtest-admin\nnamespace: default\n"
        },
        "k8s-tracingtest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tracingtest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "tracingtest",
                "scope": "AmbassadorTest"
            },
            "name": "tracingtest",
            "namespace": "default",
            "rkey": "k8s-tracingtest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: tracingtest\n  scope: AmbassadorTest\nname: tracingtest\nnamespace: default\n"
        },
        "k8s-tracingtest-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tracingtest-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "tracingtest",
                "scope": "AmbassadorTest"
            },
            "name": "tracingtest-http",
            "namespace": "default",
            "rkey": "k8s-tracingtest-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tracingtest\n  scope: AmbassadorTest\nname: tracingtest-http\nnamespace: default\n"
        },
        "k8s-tracingtestsampling-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tracingtestsampling-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "tracingtestsampling",
                "scope": "AmbassadorTest",
                "service": "tracingtestsampling-admin"
            },
            "name": "tracingtestsampling-admin",
            "namespace": "default",
            "rkey": "k8s-tracingtestsampling-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tracingtestsampling\n  scope: AmbassadorTest\n  service: tracingtestsampling-admin\nname: tracingtestsampling-admin\nnamespace: default\n"
        },
        "k8s-tracingtestsampling-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tracingtestsampling-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "tracingtestsampling",
                "scope": "AmbassadorTest"
            },
            "name": "tracingtestsampling",
            "namespace": "default",
            "rkey": "k8s-tracingtestsampling-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: tracingtestsampling\n  scope: AmbassadorTest\nname: tracingtestsampling\nnamespace: default\n"
        },
        "k8s-tracingtestsampling-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tracingtestsampling-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "tracingtestsampling",
                "scope": "AmbassadorTest"
            },
            "name": "tracingtestsampling-http",
            "namespace": "default",
            "rkey": "k8s-tracingtestsampling-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tracingtestsampling\n  scope: AmbassadorTest\nname: tracingtestsampling-http\nnamespace: default\n"
        },
        "k8s-tracingtestshorttraceid-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tracingtestshorttraceid-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "tracingtestshorttraceid",
                "scope": "AmbassadorTest",
                "service": "tracingtestshorttraceid-admin"
            },
            "name": "tracingtestshorttraceid-admin",
            "namespace": "default",
            "rkey": "k8s-tracingtestshorttraceid-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tracingtestshorttraceid\n  scope: AmbassadorTest\n  service: tracingtestshorttraceid-admin\nname: tracingtestshorttraceid-admin\nnamespace: default\n"
        },
        "k8s-tracingtestshorttraceid-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tracingtestshorttraceid-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "tracingtestshorttraceid",
                "scope": "AmbassadorTest"
            },
            "name": "tracingtestshorttraceid",
            "namespace": "default",
            "rkey": "k8s-tracingtestshorttraceid-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: tracingtestshorttraceid\n  scope: AmbassadorTest\nname: tracingtestshorttraceid\nnamespace: default\n"
        },
        "k8s-tracingtestshorttraceid-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tracingtestshorttraceid-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "tracingtestshorttraceid",
                "scope": "AmbassadorTest"
            },
            "name": "tracingtestshorttraceid-http",
            "namespace": "default",
            "rkey": "k8s-tracingtestshorttraceid-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tracingtestshorttraceid\n  scope: AmbassadorTest\nname: tracingtestshorttraceid-http\nnamespace: default\n"
        },
        "k8s-tracingtestzipkinv1-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tracingtestzipkinv1-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "tracingtestzipkinv1",
                "scope": "AmbassadorTest",
                "service": "tracingtestzipkinv1-admin"
            },
            "name": "tracingtestzipkinv1-admin",
            "namespace": "default",
            "rkey": "k8s-tracingtestzipkinv1-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tracingtestzipkinv1\n  scope: AmbassadorTest\n  service: tracingtestzipkinv1-admin\nname: tracingtestzipkinv1-admin\nnamespace: default\n"
        },
        "k8s-tracingtestzipkinv1-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tracingtestzipkinv1-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "tracingtestzipkinv1",
                "scope": "AmbassadorTest"
            },
            "name": "tracingtestzipkinv1",
            "namespace": "default",
            "rkey": "k8s-tracingtestzipkinv1-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: tracingtestzipkinv1\n  scope: AmbassadorTest\nname: tracingtestzipkinv1\nnamespace: default\n"
        },
        "k8s-tracingtestzipkinv1-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tracingtestzipkinv1-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "tracingtestzipkinv1",
                "scope": "AmbassadorTest"
            },
            "name": "tracingtestzipkinv1-http",
            "namespace": "default",
            "rkey": "k8s-tracingtestzipkinv1-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tracingtestzipkinv1\n  scope: AmbassadorTest\nname: tracingtestzipkinv1-http\nnamespace: default\n"
        },
        "k8s-tracingtestzipkinv2-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tracingtestzipkinv2-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "tracingtestzipkinv2",
                "scope": "AmbassadorTest",
                "service": "tracingtestzipkinv2-admin"
            },
            "name": "tracingtestzipkinv2-admin",
            "namespace": "default",
            "rkey": "k8s-tracingtestzipkinv2-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tracingtestzipkinv2\n  scope: AmbassadorTest\n  service: tracingtestzipkinv2-admin\nname: tracingtestzipkinv2-admin\nnamespace: default\n"
        },
        "k8s-tracingtestzipkinv2-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tracingtestzipkinv2-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "tracingtestzipkinv2",
                "scope": "AmbassadorTest"
            },
            "name": "tracingtestzipkinv2",
            "namespace": "default",
            "rkey": "k8s-tracingtestzipkinv2-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: tracingtestzipkinv2\n  scope: AmbassadorTest\nname: tracingtestzipkinv2\nnamespace: default\n"
        },
        "k8s-tracingtestzipkinv2-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-tracingtestzipkinv2-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "tracingtestzipkinv2",
                "scope": "AmbassadorTest"
            },
            "name": "tracingtestzipkinv2-http",
            "namespace": "default",
            "rkey": "k8s-tracingtestzipkinv2-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tracingtestzipkinv2\n  scope: AmbassadorTest\nname: tracingtestzipkinv2-http\nnamespace: default\n"
        },
        "k8s-unsaferegexmapping-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-unsaferegexmapping-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "unsaferegexmapping",
                "scope": "AmbassadorTest",
                "service": "unsaferegexmapping-admin"
            },
            "name": "unsaferegexmapping-admin",
            "namespace": "default",
            "rkey": "k8s-unsaferegexmapping-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: unsaferegexmapping\n  scope: AmbassadorTest\n  service: unsaferegexmapping-admin\nname: unsaferegexmapping-admin\nnamespace: default\n"
        },
        "k8s-unsaferegexmapping-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-unsaferegexmapping-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "unsaferegexmapping",
                "scope": "AmbassadorTest"
            },
            "name": "unsaferegexmapping",
            "namespace": "default",
            "rkey": "k8s-unsaferegexmapping-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: unsaferegexmapping\n  scope: AmbassadorTest\nname: unsaferegexmapping\nnamespace: default\n"
        },
        "k8s-unsaferegexmapping-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-unsaferegexmapping-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "unsaferegexmapping",
                "scope": "AmbassadorTest"
            },
            "name": "unsaferegexmapping-http",
            "namespace": "default",
            "rkey": "k8s-unsaferegexmapping-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: unsaferegexmapping\n  scope: AmbassadorTest\nname: unsaferegexmapping-http\nnamespace: default\n"
        },
        "k8s-webhook-knative-serving": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-webhook-knative-serving",
            "metadata_labels": {
                "role": "webhook",
                "serving.knative.dev/release": "v0.11.0"
            },
            "name": "webhook",
            "namespace": "knative-serving",
            "rkey": "k8s-webhook-knative-serving",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  role: webhook\n  serving.knative.dev/release: v0.11.0\nname: webhook\nnamespace: knative-serving\n"
        },
        "k8s-xfpredirect-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-xfpredirect-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "xfpredirect",
                "scope": "AmbassadorTest",
                "service": "xfpredirect-admin"
            },
            "name": "xfpredirect-admin",
            "namespace": "default",
            "rkey": "k8s-xfpredirect-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: xfpredirect\n  scope: AmbassadorTest\n  service: xfpredirect-admin\nname: xfpredirect-admin\nnamespace: default\n"
        },
        "k8s-xfpredirect-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-xfpredirect-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "xfpredirect",
                "scope": "AmbassadorTest"
            },
            "name": "xfpredirect",
            "namespace": "default",
            "rkey": "k8s-xfpredirect-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: xfpredirect\n  scope: AmbassadorTest\nname: xfpredirect\nnamespace: default\n"
        },
        "k8s-xfpredirect-http-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-xfpredirect-http-default",
            "metadata_labels": {
                "kat-ambassador-id": "xfpredirect",
                "scope": "AmbassadorTest"
            },
            "name": "xfpredirect-http",
            "namespace": "default",
            "rkey": "k8s-xfpredirect-http-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: xfpredirect\n  scope: AmbassadorTest\nname: xfpredirect-http\nnamespace: default\n"
        },
        "k8s-xrequestidheaderdefaulttest-http-target-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-xrequestidheaderdefaulttest-http-target-default",
            "metadata_labels": {
                "kat-ambassador-id": "xrequestidheaderdefaulttest",
                "scope": "AmbassadorTest"
            },
            "name": "xrequestidheaderdefaulttest-http-target",
            "namespace": "default",
            "rkey": "k8s-xrequestidheaderdefaulttest-http-target-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: xrequestidheaderdefaulttest\n  scope: AmbassadorTest\nname: xrequestidheaderdefaulttest-http-target\nnamespace: default\n"
        },
        "k8s-xrequestidheaderpreservetest-admin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-xrequestidheaderpreservetest-admin-default",
            "metadata_labels": {
                "kat-ambassador-id": "xrequestidheaderpreservetest",
                "scope": "AmbassadorTest",
                "service": "xrequestidheaderpreservetest-admin"
            },
            "name": "xrequestidheaderpreservetest-admin",
            "namespace": "default",
            "rkey": "k8s-xrequestidheaderpreservetest-admin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: xrequestidheaderpreservetest\n  scope: AmbassadorTest\n  service: xrequestidheaderpreservetest-admin\nname: xrequestidheaderpreservetest-admin\nnamespace: default\n"
        },
        "k8s-xrequestidheaderpreservetest-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-xrequestidheaderpreservetest-default",
            "metadata_labels": {
                "app.kubernetes.io/component": "ambassador-service",
                "kat-ambassador-id": "xrequestidheaderpreservetest",
                "scope": "AmbassadorTest"
            },
            "name": "xrequestidheaderpreservetest",
            "namespace": "default",
            "rkey": "k8s-xrequestidheaderpreservetest-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  app.kubernetes.io/component: ambassador-service\n  kat-ambassador-id: xrequestidheaderpreservetest\n  scope: AmbassadorTest\nname: xrequestidheaderpreservetest\nnamespace: default\n"
        },
        "k8s-xrequestidheaderpreservetest-http-target-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-xrequestidheaderpreservetest-http-target-default",
            "metadata_labels": {
                "kat-ambassador-id": "xrequestidheaderpreservetest",
                "scope": "AmbassadorTest"
            },
            "name": "xrequestidheaderpreservetest-http-target",
            "namespace": "default",
            "rkey": "k8s-xrequestidheaderpreservetest-http-target-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: xrequestidheaderpreservetest\n  scope: AmbassadorTest\nname: xrequestidheaderpreservetest-http-target\nnamespace: default\n"
        },
        "k8s-zipkin-64-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-zipkin-64-default",
            "metadata_labels": {
                "kat-ambassador-id": "tracingtestshorttraceid",
                "scope": "AmbassadorTest"
            },
            "name": "zipkin-64",
            "namespace": "default",
            "rkey": "k8s-zipkin-64-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tracingtestshorttraceid\n  scope: AmbassadorTest\nname: zipkin-64\nnamespace: default\n"
        },
        "k8s-zipkin-65-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-zipkin-65-default",
            "metadata_labels": {
                "kat-ambassador-id": "tracingtestsampling",
                "scope": "AmbassadorTest"
            },
            "name": "zipkin-65",
            "namespace": "default",
            "rkey": "k8s-zipkin-65-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tracingtestsampling\n  scope: AmbassadorTest\nname: zipkin-65\nnamespace: default\n"
        },
        "k8s-zipkin-auth-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-zipkin-auth-default",
            "metadata_labels": {
                "kat-ambassador-id": "tracingexternalauthtest",
                "scope": "AmbassadorTest"
            },
            "name": "zipkin-auth",
            "namespace": "default",
            "rkey": "k8s-zipkin-auth-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tracingexternalauthtest\n  scope: AmbassadorTest\nname: zipkin-auth\nnamespace: default\n"
        },
        "k8s-zipkin-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-zipkin-default",
            "metadata_labels": {
                "kat-ambassador-id": "tracingtest",
                "scope": "AmbassadorTest"
            },
            "name": "zipkin",
            "namespace": "default",
            "rkey": "k8s-zipkin-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tracingtest\n  scope: AmbassadorTest\nname: zipkin\nnamespace: default\n"
        },
        "k8s-zipkin-v1-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-zipkin-v1-default",
            "metadata_labels": {
                "kat-ambassador-id": "tracingtestzipkinv1",
                "scope": "AmbassadorTest"
            },
            "name": "zipkin-v1",
            "namespace": "default",
            "rkey": "k8s-zipkin-v1-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tracingtestzipkinv1\n  scope: AmbassadorTest\nname: zipkin-v1\nnamespace: default\n"
        },
        "k8s-zipkin-v2-default": {
            "_referenced_by": {},
            "ambassador_id": "circuitbreakingtest",
            "apiVersion": "getambassador.io/v2",
            "endpoints": {},
            "kind": "Service",
            "location": "k8s-zipkin-v2-default",
            "metadata_labels": {
                "kat-ambassador-id": "tracingtestzipkinv2",
                "scope": "AmbassadorTest"
            },
            "name": "zipkin-v2",
            "namespace": "default",
            "rkey": "k8s-zipkin-v2-default",
            "serialization": "ambassador_id: circuitbreakingtest\napiVersion: getambassador.io/v2\nendpoints: {}\nkind: Service\nmetadata_labels:\n  kat-ambassador-id: tracingtestzipkinv2\n  scope: AmbassadorTest\nname: zipkin-v2\nnamespace: default\n"
        }
    },
    "tls_contexts": []
}